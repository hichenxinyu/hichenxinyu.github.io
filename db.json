{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/Chic/source/favicon.ico","path":"favicon.ico","modified":0,"renderable":1},{"_id":"themes/Chic/source/css/base.styl","path":"css/base.styl","modified":0,"renderable":1},{"_id":"themes/Chic/source/css/custom.styl","path":"css/custom.styl","modified":0,"renderable":1},{"_id":"themes/Chic/source/css/font.styl","path":"css/font.styl","modified":0,"renderable":1},{"_id":"themes/Chic/source/css/layout.styl","path":"css/layout.styl","modified":0,"renderable":1},{"_id":"themes/Chic/source/css/media.styl","path":"css/media.styl","modified":0,"renderable":1},{"_id":"themes/Chic/source/css/normalize.styl","path":"css/normalize.styl","modified":0,"renderable":1},{"_id":"themes/Chic/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/Chic/source/css/variable.styl","path":"css/variable.styl","modified":0,"renderable":1},{"_id":"themes/Chic/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/Chic/source/js/mathjax2.7.5.js","path":"js/mathjax2.7.5.js","modified":0,"renderable":1},{"_id":"themes/Chic/source/js/tocbot.min.js","path":"js/tocbot.min.js","modified":0,"renderable":1},{"_id":"themes/Chic/source/image/avatar.jpeg","path":"image/avatar.jpeg","modified":0,"renderable":1},{"_id":"themes/Chic/source/fonts/iconfont/demo.css","path":"fonts/iconfont/demo.css","modified":0,"renderable":1},{"_id":"themes/Chic/source/fonts/iconfont/demo_index.html","path":"fonts/iconfont/demo_index.html","modified":0,"renderable":1},{"_id":"themes/Chic/source/fonts/iconfont/iconfont.css","path":"fonts/iconfont/iconfont.css","modified":0,"renderable":1},{"_id":"themes/Chic/source/fonts/iconfont/iconfont.eot","path":"fonts/iconfont/iconfont.eot","modified":0,"renderable":1},{"_id":"themes/Chic/source/fonts/iconfont/iconfont.js","path":"fonts/iconfont/iconfont.js","modified":0,"renderable":1},{"_id":"themes/Chic/source/fonts/iconfont/iconfont.svg","path":"fonts/iconfont/iconfont.svg","modified":0,"renderable":1},{"_id":"themes/Chic/source/fonts/iconfont/iconfont.ttf","path":"fonts/iconfont/iconfont.ttf","modified":0,"renderable":1},{"_id":"themes/Chic/source/fonts/iconfont/iconfont.woff","path":"fonts/iconfont/iconfont.woff","modified":0,"renderable":1},{"_id":"themes/Chic/source/fonts/iconfont/iconfont.woff2","path":"fonts/iconfont/iconfont.woff2","modified":0,"renderable":1},{"_id":"themes/Chic/source/fonts/lanting/lanting.woff2","path":"fonts/lanting/lanting.woff2","modified":0,"renderable":1},{"_id":"themes/Chic/source/fonts/lanting/lanting.woff","path":"fonts/lanting/lanting.woff","modified":0,"renderable":1},{"_id":"themes/Chic/source/fonts/lanting/lanting.eot","path":"fonts/lanting/lanting.eot","modified":0,"renderable":1},{"_id":"themes/Chic/source/fonts/lanting/lanting.TTF","path":"fonts/lanting/lanting.TTF","modified":0,"renderable":1},{"_id":"themes/Chic/source/fonts/lanting/lanting.otf","path":"fonts/lanting/lanting.otf","modified":0,"renderable":1}],"Cache":[{"_id":"themes/Chic/ChangeLogs.md","hash":"0e8cf146f1d08661c53b63d6c0aa02f850ef25d7","modified":1568340944401},{"_id":"themes/Chic/LICENSE.md","hash":"9911bdafa287bd65a822f84cc12012980bd10247","modified":1568340944401},{"_id":"themes/Chic/README-CN.md","hash":"29e5f35c64e1e6c0fe7bddb38f712afd3e4d8626","modified":1568340944402},{"_id":"themes/Chic/README.md","hash":"b38dd5321876df94ca7ab70665bc521bacc1fe8c","modified":1568340944402},{"_id":"themes/Chic/_config.yml","hash":"2640513b57276c16a4a64210447b0f5a87cd60cc","modified":1568353705235},{"_id":"themes/Chic/package.json","hash":"8b4072879307eed0e74ae35390825c5e03b9229c","modified":1568340944414},{"_id":"themes/Chic/scripts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1568340944414},{"_id":"source/_posts/Nginx学习笔记.md","hash":"729959733d48fa898cccf5195b8be815d098f96f","modified":1568339102281},{"_id":"source/_posts/Prometheus.md","hash":"dae48a9fa3c45a03f4533c25ffb0e716e95e3e6f","modified":1568339102282},{"_id":"source/_posts/VScode使用笔记.md","hash":"6f1e063255e646ab6655fd4b85be0a7425c6f798","modified":1568339102283},{"_id":"source/_posts/Yum命令被锁解决.md","hash":"88b1f6da8a80058d1fe22367751a26e0515c352b","modified":1568339102283},{"_id":"source/_posts/gerrit CodeReview工具搭建配置.md","hash":"c0cf89b14efd3d438bf9fe04f663889cbac9b847","modified":1568339102284},{"_id":"source/_posts/更换yum源.md","hash":"615fbfcc71ba0463b085e90fa35bb2400e609cbf","modified":1568339102284},{"_id":"source/about/index.md","hash":"339e286094f3d665681403fa9e8b627aaedd3ac6","modified":1568341506639},{"_id":"source/category/index.md","hash":"4ffbdd0b0d2eac97f4cf49fd147ff320706f7916","modified":1568340963263},{"_id":"source/tag/index.md","hash":"30b27e8add885b4e0451b757dadd0608d0a09923","modified":1568340988417},{"_id":"themes/Chic/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1568340944391},{"_id":"themes/Chic/.git/config","hash":"cd7ab5965f436f6c309d895a80a01fd2b19d3241","modified":1568340944394},{"_id":"themes/Chic/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1568340932068},{"_id":"themes/Chic/.git/index","hash":"745187a89b292f11615d9cfe02a8d81fbb6d8728","modified":1568340944624},{"_id":"themes/Chic/.git/packed-refs","hash":"0ba924b8a84e649c0d6743b13d79e7321e50d1d2","modified":1568340944387},{"_id":"themes/Chic/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1568340944403},{"_id":"themes/Chic/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1568340944403},{"_id":"themes/Chic/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1568340944403},{"_id":"themes/Chic/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1568340944404},{"_id":"themes/Chic/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1568340944404},{"_id":"themes/Chic/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1568340944405},{"_id":"themes/Chic/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1568340944405},{"_id":"themes/Chic/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1568340944405},{"_id":"themes/Chic/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1568340944405},{"_id":"themes/Chic/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1568340944406},{"_id":"themes/Chic/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1568340944406},{"_id":"themes/Chic/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1568340944406},{"_id":"themes/Chic/layout/archive.ejs","hash":"48cdf67b628eb6a1c24d484ed252f5b0e3f06ddf","modified":1568340944412},{"_id":"themes/Chic/layout/category.ejs","hash":"cae7483c92ff639f74f8efe67959f37c97350800","modified":1568340944413},{"_id":"themes/Chic/layout/index.ejs","hash":"b3344720176ad12dc88745cc5b31d497356ca4fa","modified":1568340944413},{"_id":"themes/Chic/layout/layout.ejs","hash":"f874320edabdefc204f9e17d119a16d16f26c363","modified":1568340944413},{"_id":"themes/Chic/layout/page.ejs","hash":"3179c527694a789760742e1923c7ac5f94b4997c","modified":1568340944413},{"_id":"themes/Chic/layout/post.ejs","hash":"a23f83d6c559ce88588472267468a54488d50e8e","modified":1568340944413},{"_id":"themes/Chic/layout/tag.ejs","hash":"d85ca78392be138b1589499cba95186b20c3a902","modified":1568340944414},{"_id":"themes/Chic/source/favicon.ico","hash":"96b9a549337c2bec483c2879eeafa4d1f8748fed","modified":1568340944503},{"_id":"themes/Chic/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1568340932069},{"_id":"themes/Chic/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1568340932068},{"_id":"themes/Chic/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1568340932069},{"_id":"themes/Chic/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1568340932070},{"_id":"themes/Chic/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1568340932070},{"_id":"themes/Chic/.git/hooks/pre-commit.sample","hash":"33729ad4ce51acda35094e581e4088f3167a0af8","modified":1568340932069},{"_id":"themes/Chic/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1568340932071},{"_id":"themes/Chic/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1568340932068},{"_id":"themes/Chic/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1568340932069},{"_id":"themes/Chic/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1568340932070},{"_id":"themes/Chic/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1568340932071},{"_id":"themes/Chic/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1568340932067},{"_id":"themes/Chic/.git/logs/HEAD","hash":"2db31f4cf65ec713432efdccab1c195b8c69db81","modified":1568340944392},{"_id":"themes/Chic/layout/_page/archive.ejs","hash":"464549286c92ea0d6cb057c6936e0f1a5d1c1dd2","modified":1568340944407},{"_id":"themes/Chic/layout/_page/category.ejs","hash":"e8464e11d08a711fe815ea1cd101aa41d7310ebf","modified":1568340944407},{"_id":"themes/Chic/layout/_page/page.ejs","hash":"1d875d59cf4d6b681cc8cf755f19b5355e5d1144","modified":1568340944408},{"_id":"themes/Chic/layout/_page/post.ejs","hash":"6eb9cd3ee904e99ff78509298ae31a29fdbf49cf","modified":1568340944408},{"_id":"themes/Chic/layout/_page/profile.ejs","hash":"c6d3cf2ef90e5d0fd580e7cff1db47c28fb36037","modified":1568340944409},{"_id":"themes/Chic/layout/_page/tag.ejs","hash":"0c20ff00532103f9a59639ca9956fc0bce4aabc2","modified":1568340944409},{"_id":"themes/Chic/layout/_partial/footer.ejs","hash":"e1c332fab0d6cd713e36d46ccc14d0991067ba40","modified":1568340944410},{"_id":"themes/Chic/layout/_partial/head.ejs","hash":"6ea29cae0cb06b0659c4e6914cc5956ac119bef5","modified":1568340944410},{"_id":"themes/Chic/layout/_partial/header.ejs","hash":"ba1eb6d8cfccf3a2363b9d421c9e51dc1c688ff6","modified":1568340944411},{"_id":"themes/Chic/layout/_partial/paginator.ejs","hash":"ab59d5db77f2aa64dfe03656e72fd49702c62e23","modified":1568340944411},{"_id":"themes/Chic/layout/_partial/toc.ejs","hash":"10bb9c303c948f5615149981cd85cbbd3e7c781c","modified":1568340944411},{"_id":"themes/Chic/layout/_plugins/mathjax.ejs","hash":"53f088fe44d51c4d9fb61aeac4c23b3cfcc19762","modified":1568340944412},{"_id":"themes/Chic/source/css/base.styl","hash":"7ea2db2c139a719bb7d3f3c5e182dd0e0d59e098","modified":1568340944500},{"_id":"themes/Chic/source/css/custom.styl","hash":"bf8dee1a094b104d87a53b43f6daa7ba43b67574","modified":1568340944500},{"_id":"themes/Chic/source/css/font.styl","hash":"a7a3cbf98142891e2e13143e5687447f1c23ac21","modified":1568340944500},{"_id":"themes/Chic/source/css/layout.styl","hash":"9942d05bb2c55cf035d4bf9af325e1e81766a510","modified":1568340944501},{"_id":"themes/Chic/source/css/media.styl","hash":"f96c0dbb9653667906a6dc271f637543ac5c7212","modified":1568340944501},{"_id":"themes/Chic/source/css/normalize.styl","hash":"b3337320133b7a336db7033aa6bbe94b054c0b21","modified":1568340944502},{"_id":"themes/Chic/source/css/style.styl","hash":"3574bf933c2ff46ea673be18a35a0d5395538420","modified":1568340944502},{"_id":"themes/Chic/source/css/variable.styl","hash":"906faa95457eba70118a0705e13b8f43409e502f","modified":1568340944502},{"_id":"themes/Chic/source/js/script.js","hash":"93694e4e16893f83611daa5ba3723b14ecc80abb","modified":1568340944623},{"_id":"themes/Chic/source/js/mathjax2.7.5.js","hash":"7ba18c783d543cfb4b45a0118ccb73d3f68cd46e","modified":1568340944623},{"_id":"themes/Chic/source/js/tocbot.min.js","hash":"bae97e8a24a05a99335f8e725641c8ca9c50502a","modified":1568340944623},{"_id":"themes/Chic/source/image/avatar.jpeg","hash":"5d46dc78e55390dfab0149798249bf655dd03fca","modified":1568340944622},{"_id":"themes/Chic/.git/objects/pack/pack-11c33e4ff63ef3532870d0a83cf3983a39357df2.idx","hash":"2dd32435004cc47dce9cba864925e085f32aefbe","modified":1568340944356},{"_id":"themes/Chic/.git/refs/heads/master","hash":"6b7ee8b942a177f43d78b569f471c45ab3fde6b5","modified":1568340944392},{"_id":"themes/Chic/source/css/_lib/looper.css","hash":"863144dc9af7c1e181670515bc85eaf768f4e287","modified":1568340944492},{"_id":"themes/Chic/source/css/_lib/tocbot.css","hash":"15601837bf8557c2fd111e4450ed4c8495fd11a0","modified":1568340944493},{"_id":"themes/Chic/source/css/_highlight/agate.styl","hash":"53027913ed8d4f75ac3e49e76aad824f0df62da3","modified":1568340944414},{"_id":"themes/Chic/source/css/_highlight/arduino-light.styl","hash":"15e8572585cd708221c513dea4bdd89d8fe56c10","modified":1568340944415},{"_id":"themes/Chic/source/css/_highlight/androidstudio.styl","hash":"2af0861725f97f0ee2ded67c3d2d4548c62b2d16","modified":1568340944415},{"_id":"themes/Chic/source/css/_highlight/arta.styl","hash":"b3e81e3e694ceb8deed178adb8b91013c5120e30","modified":1568340944415},{"_id":"themes/Chic/source/css/_highlight/ascetic.styl","hash":"32cff3bef6fac3760fe78f203096477052a90552","modified":1568340944416},{"_id":"themes/Chic/source/css/_highlight/atelier-cave-dark.styl","hash":"ce63dd8548688d88254405eedfa75b1d7c82449e","modified":1568340944416},{"_id":"themes/Chic/source/css/_highlight/atelier-cave-light.styl","hash":"a5be0744a7ecf4a08f600ade4cfd555afc67bc15","modified":1568340944416},{"_id":"themes/Chic/source/css/_highlight/atelier-dune-dark.styl","hash":"c196ff0ee064af0e507823694ae39020addfc280","modified":1568340944416},{"_id":"themes/Chic/source/css/_highlight/atelier-dune-light.styl","hash":"931435fbc6f974e8ce9e32722680035d248a9dc1","modified":1568340944416},{"_id":"themes/Chic/source/css/_highlight/atelier-estuary-dark.styl","hash":"0bb16a4eff93688f40787abc2f9e56e7d5cc93e7","modified":1568340944417},{"_id":"themes/Chic/source/css/_highlight/atelier-forest-dark.styl","hash":"effbc5d75fa87203c847039869c22031b40d5b7d","modified":1568340944417},{"_id":"themes/Chic/source/css/_highlight/atelier-estuary-light.styl","hash":"344276ca9b27e51d4c907f76afe5d13cf8e60bdf","modified":1568340944417},{"_id":"themes/Chic/source/css/_highlight/atelier-forest-light.styl","hash":"95228d9f2102fad425536aac44b80b2cba1f5950","modified":1568340944418},{"_id":"themes/Chic/source/css/_highlight/atelier-heath-dark.styl","hash":"9a2e9a1d0a01bbdf158560c3ed1c134e098b2c68","modified":1568340944418},{"_id":"themes/Chic/source/css/_highlight/atelier-heath-light.styl","hash":"8c8c2e445abef85273be966d59770e9ced6aac21","modified":1568340944418},{"_id":"themes/Chic/source/css/_highlight/atelier-lakeside-dark.styl","hash":"10ee3882fca7b97a37bd309d2d35fce9868647bb","modified":1568340944418},{"_id":"themes/Chic/source/css/_highlight/atelier-plateau-dark.styl","hash":"84c80e6f67f62fce958d25817c277d2360272617","modified":1568340944419},{"_id":"themes/Chic/source/css/_highlight/atelier-lakeside-light.styl","hash":"2c54cb9bdb259ae3b5b29f63ac2469ed34b08578","modified":1568340944419},{"_id":"themes/Chic/source/css/_highlight/atelier-plateau-light.styl","hash":"d1a05fdd1ededc9063d181ab25bad55a164aeb4a","modified":1568340944419},{"_id":"themes/Chic/source/css/_highlight/atelier-savanna-dark.styl","hash":"e32c1c70def8060fce5e790979a126da650ac642","modified":1568340944419},{"_id":"themes/Chic/source/css/_highlight/atelier-savanna-light.styl","hash":"f8244c93711c7cb59dd79d2df966806b30d171ea","modified":1568340944419},{"_id":"themes/Chic/source/css/_highlight/atelier-seaside-dark.styl","hash":"2edf385215bbe1985b1a10106525d362667d28c2","modified":1568340944420},{"_id":"themes/Chic/source/css/_highlight/atelier-seaside-light.styl","hash":"0597342da6e2d0c5bdcc7d42dabb07322b1a4177","modified":1568340944420},{"_id":"themes/Chic/source/css/_highlight/atelier-sulphurpool-dark.styl","hash":"538a14321193cd8abf2ddc484306631e54149ffb","modified":1568340944420},{"_id":"themes/Chic/source/css/_highlight/atelier-sulphurpool-light.styl","hash":"efa52713efc468abeeb2b9299704371583b857de","modified":1568340944421},{"_id":"themes/Chic/source/css/_highlight/brown-papersq.png","hash":"3a1332ede3a75a3d24f60b6ed69035b72da5e182","modified":1568340944421},{"_id":"themes/Chic/source/css/_highlight/brown-paper.styl","hash":"329b85ae9130a5587a6fb1c6f80396f9cca5ddc1","modified":1568340944421},{"_id":"themes/Chic/source/css/_highlight/codepen-embed.styl","hash":"8b7b34484f76a6c2c3b1a9e49abb9b382f439ae8","modified":1568340944421},{"_id":"themes/Chic/source/css/_highlight/color-brewer.styl","hash":"2a439d6214430e2f45dd4939b4dfe1fe1a20aa0f","modified":1568340944422},{"_id":"themes/Chic/source/css/_highlight/dark.styl","hash":"f5e6e75958de59e87fc6be3a1668e870e20bc836","modified":1568340944422},{"_id":"themes/Chic/source/css/_highlight/darkula.styl","hash":"9717efa9194837ba3fb4d762997d33075dcf8bfa","modified":1568340944422},{"_id":"themes/Chic/source/css/_highlight/docco.styl","hash":"b1c176378bb275f2e8caa759f36294e42d614bf1","modified":1568340944423},{"_id":"themes/Chic/source/css/_highlight/far.styl","hash":"aaac3028f5e33123cd123a583cddc9290c45ec8e","modified":1568340944423},{"_id":"themes/Chic/source/css/_highlight/foundation.styl","hash":"bf8ddc94b4ad995b8b8805b5a4cf95004553fdac","modified":1568340944423},{"_id":"themes/Chic/source/css/_highlight/github-gist.styl","hash":"48211a03d33e7f7ada0b261162bea06676155a71","modified":1568340944424},{"_id":"themes/Chic/source/css/_highlight/github.styl","hash":"3336aeba324c6d34a6fd41fef9b47bc598f7064c","modified":1568340944424},{"_id":"themes/Chic/source/css/_highlight/googlecode.styl","hash":"bda816beee7b439814b514e6869dc678822be1bc","modified":1568340944424},{"_id":"themes/Chic/source/css/_highlight/grayscale.styl","hash":"bf37d8b8d1e602126c51526f0cc28807440228ed","modified":1568340944425},{"_id":"themes/Chic/source/css/_highlight/gruvbox-dark.styl","hash":"76b744c14fd5600bea64731c05df97c2df75523f","modified":1568340944425},{"_id":"themes/Chic/source/css/_highlight/highlightjs.styl","hash":"0e198b7a59191c7a39b641a4ddd22c948edb9358","modified":1568340944425},{"_id":"themes/Chic/source/css/_highlight/hopscotch.styl","hash":"1378a6bc67a32c0cbff72ab771268b53f9aa586d","modified":1568340944426},{"_id":"themes/Chic/source/css/_highlight/hybrid.styl","hash":"b8eb5c69d12f2ee5ebc50265ae271699d7f1a8d3","modified":1568340944443},{"_id":"themes/Chic/source/css/_highlight/idea.styl","hash":"a02967cb51c16a34e0ee895d33ded2b823d35b21","modified":1568340944444},{"_id":"themes/Chic/source/css/_highlight/index.styl","hash":"002d5596f6379cc87dbd43d9145bc764aa666be1","modified":1568340944444},{"_id":"themes/Chic/source/css/_highlight/ir-black.styl","hash":"53e5d74326a4527b92272bbd6946d4fec92720e8","modified":1568340944445},{"_id":"themes/Chic/source/css/_highlight/kimbie.dark.styl","hash":"45dbb168f22d739d0109745d2decd66b5f94e786","modified":1568340944445},{"_id":"themes/Chic/source/css/_highlight/kimbie.light.styl","hash":"61f8baed25be05288c8604d5070afbcd9f183f49","modified":1568340944446},{"_id":"themes/Chic/source/css/_highlight/kimbie.styl","hash":"51b889ca7c6fe178cfbbe28d875a6ea427184441","modified":1568340944468},{"_id":"themes/Chic/source/css/_highlight/mono-blue.styl","hash":"4c89a6ae29de67c0700585af82a60607e85df928","modified":1568340944483},{"_id":"themes/Chic/source/css/_highlight/magula.styl","hash":"16d323f989b1420a0f72ef989242ece9bf17a456","modified":1568340944483},{"_id":"themes/Chic/source/css/_highlight/monokai-sublime.styl","hash":"c385b11345894be7e6ce3c5f08663e199933b8e4","modified":1568340944484},{"_id":"themes/Chic/source/css/_highlight/monokai.styl","hash":"f87be027848ea6bee623a08ad1e17b2f5b7937ee","modified":1568340944484},{"_id":"themes/Chic/source/css/_highlight/obsidian.styl","hash":"199e28326be8590883f0813ebbd54fcfaa4750fd","modified":1568340944485},{"_id":"themes/Chic/source/css/_highlight/paraiso-dark.styl","hash":"f1537bd868579fa018ecdbfd2eb922dcf3ba2cac","modified":1568340944485},{"_id":"themes/Chic/source/css/_highlight/paraiso-light.styl","hash":"d224d1df0eb3395d9eea1344cee945c228af2911","modified":1568340944486},{"_id":"themes/Chic/source/css/_highlight/paraiso.styl","hash":"75f181eece6b71d033ea0c8d6cf00ae7efb9e29b","modified":1568340944486},{"_id":"themes/Chic/source/css/_highlight/pojoaque.jpg","hash":"c5fe6533b88b21f8d90d3d03954c6b29baa67791","modified":1568340944486},{"_id":"themes/Chic/source/css/_highlight/pojoaque.styl","hash":"2601b4285803a7cea5ccded8d624ca95f80e3d88","modified":1568340944487},{"_id":"themes/Chic/source/css/_highlight/railscasts.styl","hash":"b6674db9210e0c4444e4835fff2d1361f3ebd64c","modified":1568340944487},{"_id":"themes/Chic/source/css/_highlight/school-book.png","hash":"711ec983c874e093bb89eb77afcbdf6741fa61ee","modified":1568340944488},{"_id":"themes/Chic/source/css/_highlight/rainbow.styl","hash":"c0cf97aae3e10fdcd10414547a711c9effbc39b8","modified":1568340944488},{"_id":"themes/Chic/source/css/_highlight/school-book.styl","hash":"beabbbcc7930f8de19159381a01c0ba41dc2291f","modified":1568340944488},{"_id":"themes/Chic/source/css/_highlight/solarized-dark.styl","hash":"90c9da5aa594383697e5b18892a7f95beb053f55","modified":1568340944489},{"_id":"themes/Chic/source/css/_highlight/solarized-light.styl","hash":"aa0dd3fd25c464183b59c5575c9bee8756b397f2","modified":1568340944489},{"_id":"themes/Chic/source/css/_highlight/sunburst.styl","hash":"af3eec0fd56151e55bbd49c31b151f36717611d8","modified":1568340944489},{"_id":"themes/Chic/source/css/_highlight/tomorrow-night-blue.styl","hash":"f24c17d0ab815dcfaab3438cb9fe2ab4839f5e0d","modified":1568340944490},{"_id":"themes/Chic/source/css/_highlight/tomorrow-night-bright.styl","hash":"7674fecb6d27350727dc0d2dc93bc018382ebbd0","modified":1568340944490},{"_id":"themes/Chic/source/css/_highlight/tomorrow-night-eighties.styl","hash":"28d751075ebabf7d0327a36f725076fe82fdf626","modified":1568340944490},{"_id":"themes/Chic/source/css/_highlight/tomorrow-night.styl","hash":"16ba09b2db501e4e3e2e7d62595d9bf935bf27c4","modified":1568340944490},{"_id":"themes/Chic/source/css/_highlight/tomorrow.styl","hash":"15779cf6846725c7c35fc56cac39047d7e0aec1c","modified":1568340944491},{"_id":"themes/Chic/source/css/_highlight/vs.styl","hash":"959a746f4b37aacb5d1d6ff1d57e0c045289d75d","modified":1568340944491},{"_id":"themes/Chic/source/css/_highlight/xcode.styl","hash":"5e8532ae8366dcf6a4ef5e4813dc3d42ab3d0a50","modified":1568340944491},{"_id":"themes/Chic/source/css/_highlight/zenburn.styl","hash":"68ff9332ccc03f9389b15b713415cde016f8088f","modified":1568340944492},{"_id":"themes/Chic/source/css/_page/archive.styl","hash":"71ea842f068b29b4418dd09450db09d27dcf0947","modified":1568340944496},{"_id":"themes/Chic/source/css/_page/category.styl","hash":"cead361269616b7a6ddec3090d9fa34c3c6ac722","modified":1568340944497},{"_id":"themes/Chic/source/css/_page/page.styl","hash":"34e33b52d2e046aa2f5494e81ff4ac2d5ca78058","modified":1568340944497},{"_id":"themes/Chic/source/css/_page/profile.styl","hash":"5ef6d5a06132f26b7aa01b2fbf4bbfb8ee862b7b","modified":1568340944497},{"_id":"themes/Chic/source/css/_page/tag.styl","hash":"55b220cc58011876fb3a470cd1fde8ed87c93079","modified":1568340944497},{"_id":"themes/Chic/source/css/_partial/footer.styl","hash":"4f58e607eaa59cda3b5a9fdb3404ffb75c4d1a03","modified":1568340944498},{"_id":"themes/Chic/source/css/_partial/header.styl","hash":"be70b4ab3bcc977f1055664899742804c716929d","modified":1568340944499},{"_id":"themes/Chic/source/css/_partial/paginator.styl","hash":"b4f4a5180c4cbc70d186792b8a1fd0f5855bd86a","modified":1568340944499},{"_id":"themes/Chic/source/fonts/iconfont/demo.css","hash":"65c50db528a5abe06426b1a20735feaf1f2a0d9b","modified":1568340944504},{"_id":"themes/Chic/source/fonts/iconfont/demo_index.html","hash":"17421a586883ca9af111fdd7c240c07efb821c37","modified":1568340944504},{"_id":"themes/Chic/source/fonts/iconfont/iconfont.css","hash":"700558f705bea4a8395576869fccdc4ebfb98ef0","modified":1568340944504},{"_id":"themes/Chic/source/fonts/iconfont/iconfont.eot","hash":"02553b14fe863421e481c059a92bf035093eb6d2","modified":1568340944505},{"_id":"themes/Chic/source/fonts/iconfont/iconfont.js","hash":"310b47f6e467764656aba0612ec45996b4f6b1ea","modified":1568340944505},{"_id":"themes/Chic/source/fonts/iconfont/iconfont.svg","hash":"5bed32f57c17baa0eb749c459fea32354bf9392f","modified":1568340944506},{"_id":"themes/Chic/source/fonts/iconfont/iconfont.ttf","hash":"00246e6f6f99f7ec1f8e224aa81380976d35528a","modified":1568340944506},{"_id":"themes/Chic/source/fonts/iconfont/iconfont.woff","hash":"83da577619512d7ea2b0e4611d90f2973297edce","modified":1568340944506},{"_id":"themes/Chic/source/fonts/iconfont/iconfont.woff2","hash":"5551fe1064a35ad20d3b7a74d2e91ac759785ed8","modified":1568340944507},{"_id":"themes/Chic/.git/logs/refs/heads/master","hash":"2db31f4cf65ec713432efdccab1c195b8c69db81","modified":1568340944392},{"_id":"themes/Chic/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1568340944390},{"_id":"themes/Chic/source/css/_page/_post/post_code.styl","hash":"40ea0bcd591597e0e41809649d4223a0cd1c8db7","modified":1568340944493},{"_id":"themes/Chic/source/css/_page/_post/post_content.styl","hash":"00f1dc087605fa09a3eff17cfe73d69488190df0","modified":1568340944494},{"_id":"themes/Chic/source/css/_page/_post/post_copyright.styl","hash":"64fd9f07ed45f035057d46740af0db70218714aa","modified":1568340944495},{"_id":"themes/Chic/source/css/_page/_post/post_header.styl","hash":"d37b032bc5edca92c84bf62070a28fa40939df55","modified":1568340944495},{"_id":"themes/Chic/source/css/_page/_post/post_nav.styl","hash":"03accaba13c995cbe65a05a88549ff74e992eb3f","modified":1568340944495},{"_id":"themes/Chic/source/css/_page/_post/post_tags.styl","hash":"2ff93677aa4d81da83c659b4dd4e3cb482d9ce7d","modified":1568340944496},{"_id":"themes/Chic/source/css/_page/_post/post_toc.styl","hash":"15e1ec7af93f41184f986aba21991a79923b0a0e","modified":1568340944496},{"_id":"themes/Chic/.git/logs/refs/remotes/origin/HEAD","hash":"2db31f4cf65ec713432efdccab1c195b8c69db81","modified":1568340944390},{"_id":"themes/Chic/source/fonts/lanting/lanting.woff2","hash":"5f325fcd2726a5b44e08b7004a5219e14847cbfa","modified":1568340944621},{"_id":"themes/Chic/source/fonts/lanting/lanting.woff","hash":"642ad1f17d27d4b1010d1a0571d1b44cbc823d9d","modified":1568340944615},{"_id":"themes/Chic/source/fonts/lanting/lanting.eot","hash":"3e184614f037939a6f98d607da3ed7dffb350e65","modified":1568340944554},{"_id":"themes/Chic/source/fonts/lanting/lanting.TTF","hash":"97e9a4538cceef4b17d54c7dc589524905d1b685","modified":1568340944535},{"_id":"themes/Chic/source/fonts/lanting/lanting.otf","hash":"4e184da596772d3ef6e5763cdee3e46a1ce2f2dd","modified":1568340944607},{"_id":"themes/Chic/.git/objects/pack/pack-11c33e4ff63ef3532870d0a83cf3983a39357df2.pack","hash":"da68837ebdbfcb5b11b3d60b002fd62e9610e04c","modified":1568340944356},{"_id":"public/about/index.html","hash":"2d14430ecd4755d4176d3d4bee88645f19ba59a0","modified":1568353716670},{"_id":"public/category/index.html","hash":"53291282c1eaa1633d053cfa1f6ccde2d47991c6","modified":1568353716670},{"_id":"public/tag/index.html","hash":"1cb2374971bf332bbfad959a533f2a946a921d7a","modified":1568353716671},{"_id":"public/2019/01/14/VScode使用笔记/index.html","hash":"1df04f8ca4cc043efac517906cf510e736d94281","modified":1568353716671},{"_id":"public/2018/02/15/Yum命令被锁解决/index.html","hash":"6ab8e2349bac32c5522e107de611fb9ec8993345","modified":1568353716671},{"_id":"public/2018/02/03/Nginx学习笔记/index.html","hash":"49e6fd3689669dd114c87bb4806ce1b42ad9582a","modified":1568353716671},{"_id":"public/2018/02/02/更换yum源/index.html","hash":"1ec3b50c5c4e02b8641a55a63cdc16f55d455b42","modified":1568353716671},{"_id":"public/archives/index.html","hash":"7423d59251a3e635d182e8772793ae46d2e78e17","modified":1568353716671},{"_id":"public/archives/2018/index.html","hash":"31d38c979442b5f8de026ce3fe36e3802603d6a7","modified":1568353716671},{"_id":"public/archives/2018/02/index.html","hash":"ca5701cf8519ae1d6af10a50ecf9bd8146bebca7","modified":1568353716671},{"_id":"public/archives/2018/04/index.html","hash":"cf7fc026a8b1220c497bb762114305e8e830c8d6","modified":1568353716671},{"_id":"public/archives/2019/index.html","hash":"c6451828f42c05284ea51266de0d6fe14ab17476","modified":1568353716671},{"_id":"public/archives/2019/01/index.html","hash":"f5fc1efa07b7b423d13f59f3ea3147e21a306b3a","modified":1568353716671},{"_id":"public/archives/2019/07/index.html","hash":"a099f1c42d21fe0c0fabc79d1f4f485b05286379","modified":1568353716671},{"_id":"public/index.html","hash":"11784d0c56c9af0fd5585a283cc18c57ccd9c33d","modified":1568353716671},{"_id":"public/tags/Nginx/index.html","hash":"144843f16ba1ba1787fa51bf628181898ba1c447","modified":1568353716671},{"_id":"public/tags/Prometheus/index.html","hash":"ee02479538276e666e7b8d0d54fcd90d60051c9c","modified":1568353716671},{"_id":"public/tags/IDE/index.html","hash":"92a2a6c56967eb8dc961e9a59af6482aa19202a4","modified":1568353716671},{"_id":"public/tags/Linux/index.html","hash":"e5afcc119b9a3e57080bad480491c3f87d8615df","modified":1568353716671},{"_id":"public/tags/gitlab/index.html","hash":"7f666ddedec14065ef7202f004672b1962b54500","modified":1568353716671},{"_id":"public/tags/gerrit/index.html","hash":"0fcb384f429890a94c261c8ea38a2a8bbabc90c7","modified":1568353716671},{"_id":"public/tags/CodeReview/index.html","hash":"a2be4ff2d39093b7d6f31bec5cc5bbda176f5fc5","modified":1568353716672},{"_id":"public/2019/07/01/Prometheus/index.html","hash":"2e2c8afd42b563a076f7e1baf100d1e124f97d71","modified":1568353716672},{"_id":"public/2018/04/18/gerrit CodeReview工具搭建配置/index.html","hash":"e64782dfb25dea5ef60ab8e28e1ef8b9ca8de3f0","modified":1568353716672},{"_id":"public/image/avatar.jpeg","hash":"5d46dc78e55390dfab0149798249bf655dd03fca","modified":1568353716674},{"_id":"public/fonts/iconfont/iconfont.eot","hash":"02553b14fe863421e481c059a92bf035093eb6d2","modified":1568353716674},{"_id":"public/fonts/iconfont/iconfont.ttf","hash":"00246e6f6f99f7ec1f8e224aa81380976d35528a","modified":1568353716674},{"_id":"public/fonts/iconfont/iconfont.svg","hash":"5bed32f57c17baa0eb749c459fea32354bf9392f","modified":1568353716674},{"_id":"public/fonts/iconfont/iconfont.woff","hash":"83da577619512d7ea2b0e4611d90f2973297edce","modified":1568353716674},{"_id":"public/fonts/iconfont/iconfont.woff2","hash":"5551fe1064a35ad20d3b7a74d2e91ac759785ed8","modified":1568353716674},{"_id":"public/favicon.ico","hash":"96b9a549337c2bec483c2879eeafa4d1f8748fed","modified":1568353716981},{"_id":"public/css/base.css","hash":"ea2d491ce6242c6b7087a2652a1135694c292137","modified":1568353716984},{"_id":"public/css/custom.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1568353716985},{"_id":"public/css/layout.css","hash":"c81e2e01ff5e95a3e613064b8490045ff936c305","modified":1568353716985},{"_id":"public/css/normalize.css","hash":"2d4b663b6a4c68295b6ba240fa2dd9fb3863093c","modified":1568353716985},{"_id":"public/css/font.css","hash":"2cfc963ba7f63ab33cf13f2617635ffe674ed85b","modified":1568353716985},{"_id":"public/css/media.css","hash":"5023ee404900a47d61ca0591b2d4e9eace0fe88e","modified":1568353716985},{"_id":"public/js/script.js","hash":"93694e4e16893f83611daa5ba3723b14ecc80abb","modified":1568353716985},{"_id":"public/css/variable.css","hash":"cb4180b3bbad471e30cf52ebb40e998d58a30d7d","modified":1568353716985},{"_id":"public/css/style.css","hash":"29dd5b04cbba88bab8c604fc3db63930fe32c41a","modified":1568353716985},{"_id":"public/js/tocbot.min.js","hash":"bae97e8a24a05a99335f8e725641c8ca9c50502a","modified":1568353716987},{"_id":"public/fonts/iconfont/iconfont.css","hash":"700558f705bea4a8395576869fccdc4ebfb98ef0","modified":1568353716987},{"_id":"public/fonts/iconfont/demo.css","hash":"65c50db528a5abe06426b1a20735feaf1f2a0d9b","modified":1568353716987},{"_id":"public/fonts/iconfont/iconfont.js","hash":"310b47f6e467764656aba0612ec45996b4f6b1ea","modified":1568353716999},{"_id":"public/fonts/iconfont/demo_index.html","hash":"1a2cfc1345aea57a7ffac007f5740a2c6accc9cf","modified":1568353716999},{"_id":"public/js/mathjax2.7.5.js","hash":"7ba18c783d543cfb4b45a0118ccb73d3f68cd46e","modified":1568353717010},{"_id":"public/fonts/lanting/lanting.woff2","hash":"5f325fcd2726a5b44e08b7004a5219e14847cbfa","modified":1568353717016},{"_id":"public/fonts/lanting/lanting.woff","hash":"642ad1f17d27d4b1010d1a0571d1b44cbc823d9d","modified":1568353717021},{"_id":"public/fonts/lanting/lanting.eot","hash":"3e184614f037939a6f98d607da3ed7dffb350e65","modified":1568353717032},{"_id":"public/fonts/lanting/lanting.TTF","hash":"97e9a4538cceef4b17d54c7dc589524905d1b685","modified":1568353717036},{"_id":"public/fonts/lanting/lanting.otf","hash":"4e184da596772d3ef6e5763cdee3e46a1ce2f2dd","modified":1568353717047}],"Category":[],"Data":[],"Page":[{"title":"about","date":"2019-09-13T02:25:06.000Z","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2019-09-13 10:25:06\n---\n","updated":"2019-09-13T02:25:06.639Z","path":"about/index.html","comments":1,"layout":"page","_id":"ck0hpb4al0001ul6vyif74jxx","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"category","date":"2019-09-13T02:16:03.000Z","_content":"","source":"category/index.md","raw":"---\ntitle: category\ndate: 2019-09-13 10:16:03\n---\n","updated":"2019-09-13T02:16:03.263Z","path":"category/index.html","comments":1,"layout":"page","_id":"ck0hpb4ap0003ul6vut7tukow","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tag","date":"2019-09-13T02:16:00.000Z","_content":"\n---\ntitle: Tag\nlayout: tag\n---\n","source":"tag/index.md","raw":"---\ntitle: tag\ndate: 2019-09-13 10:16:00\n---\n\n---\ntitle: Tag\nlayout: tag\n---\n","updated":"2019-09-13T02:16:28.417Z","path":"tag/index.html","comments":1,"layout":"page","_id":"ck0hpb4bp000oul6valpzn2ol","content":"<hr>\n<p>title: Tag</p>\n<h2 id=\"layout-tag\"><a href=\"#layout-tag\" class=\"headerlink\" title=\"layout: tag\"></a>layout: tag</h2>","site":{"data":{}},"excerpt":"","more":"<hr>\n<p>title: Tag</p>\n<h2 id=\"layout-tag\"><a href=\"#layout-tag\" class=\"headerlink\" title=\"layout: tag\"></a>layout: tag</h2>"}],"Post":[{"title":"Nginx实战","date":"2018-02-02T16:00:00.000Z","_content":"\n# 搭建一个简易的代理服务\nnginx 常常用来作为代理服务器，这代表着服务器接收请求，然后将它们传递给被代理服务器，得到请求的响应，再将它们发送给客户端。 我们将配置一个基本的代理服务器，它会处理本地图片文件的请求并返回其他的请求给被代理的服务器。在这个例子中，两个服务器都会定义在一个 nginx 实例中。 首先，通过在 nginx 配置文件中添加另一个 server 区块，来定义一个被代理的服务器，像下面的配置：\n```\nserver {\n    listen 8080;\n    root /data/up1;\n\n    location / {\n    }\n}\n```\n<!-- more --> \n\n\n上面就是一个简单的服务器，它监听在 8080 端口（之前，listen 并没被定义，是因为默认监听的 80 端口）并且会映射所有的请求给 本地文件目录 /data/up1。创建该目录，然后添加 index.html 文件。注意，root 指令是放在 server 上下文中。当响应请求的 location 区块中，没有自己的 root 指令，上述的 root 指令才会被使用。 接着，使用前面章节中的 server 配置，然后将它改为一个代理服务配置。在第一个 location 区块中，放置已经添加被代理服务器的协议，名字和端口等参数的 proxy_pass 指令（在这里，就是 http://localhost:8080）:\n```\nserver {\n    location / {\n        proxy_pass http://localhost:8080;\n    }\n\n    location /images/ {\n        root /data;\n    }\n}\n```\n## location相关\n\n我们将修改第二个 location 区块，使他返回一些典型后缀的图片文件请求，\n现在它只会映射带有 /images/ 前缀的请求到 /data/images 目录下。\n修改后的 location 指令如下：\n\n```\nlocation ~ \\.(gif|jpg|png)$ {\n    root /data/images;\n}\n```\n该参数是一个正则表达式，它会匹配所有以 .gif，.jpg 或者 .png 结尾的 URIs。\n一个正则表达式需要以 ~ 开头。匹配到的请求会被映射到 /data/images 目录下。\n 当 nginx 在选择 location 去响应一个请求时，它会先检测带有前缀的 location 指令，记住先是检测带有最长前缀的 location，然后检测正则表达式。\n 如果有一个正则的匹配的规则，nginx 会选择该 location，否则，会选择之前缓存的规则。 最终，一个代理服务器的配置结果如下：\n```\n server {\n    location / {\n        proxy_pass http://localhost:8080/;\n    }\n\n    location ~ \\.(gif|jpg|png)$ {\n        root /data/images;\n    }\n}\n```\n\n该服务器会选择以 .gif，.jpg，或者 .png 结束的请求并且映射到 /data/images 目录（通过添加 URI 给 root 指令的参数），\n接着将其他所有的请求映射到上述被代理的服务器。 为了使用新的配置，像前几个章节描述的一样，需要向 nginx 发送重载信号。\n 这还有很多其他的指令，可以用于进一步配置代理连接。\n\n\n\n  ### location 配置\n 1. = 开头表示精确匹配\n 2. ^~ 开头表示uri以某个常规字符串开头，不是正则匹配\n 3. ~ 开头表示区分大小写的正则匹配;\n 4. ~* 开头表示不区分大小写的正则匹配\n 5. / 通用匹配, 如果没有其它匹配,任何请求都会匹配到\n","source":"_posts/Nginx学习笔记.md","raw":"---\ntitle: Nginx实战\ndate: 2018-02-03\ntags: Nginx\n---\n\n# 搭建一个简易的代理服务\nnginx 常常用来作为代理服务器，这代表着服务器接收请求，然后将它们传递给被代理服务器，得到请求的响应，再将它们发送给客户端。 我们将配置一个基本的代理服务器，它会处理本地图片文件的请求并返回其他的请求给被代理的服务器。在这个例子中，两个服务器都会定义在一个 nginx 实例中。 首先，通过在 nginx 配置文件中添加另一个 server 区块，来定义一个被代理的服务器，像下面的配置：\n```\nserver {\n    listen 8080;\n    root /data/up1;\n\n    location / {\n    }\n}\n```\n<!-- more --> \n\n\n上面就是一个简单的服务器，它监听在 8080 端口（之前，listen 并没被定义，是因为默认监听的 80 端口）并且会映射所有的请求给 本地文件目录 /data/up1。创建该目录，然后添加 index.html 文件。注意，root 指令是放在 server 上下文中。当响应请求的 location 区块中，没有自己的 root 指令，上述的 root 指令才会被使用。 接着，使用前面章节中的 server 配置，然后将它改为一个代理服务配置。在第一个 location 区块中，放置已经添加被代理服务器的协议，名字和端口等参数的 proxy_pass 指令（在这里，就是 http://localhost:8080）:\n```\nserver {\n    location / {\n        proxy_pass http://localhost:8080;\n    }\n\n    location /images/ {\n        root /data;\n    }\n}\n```\n## location相关\n\n我们将修改第二个 location 区块，使他返回一些典型后缀的图片文件请求，\n现在它只会映射带有 /images/ 前缀的请求到 /data/images 目录下。\n修改后的 location 指令如下：\n\n```\nlocation ~ \\.(gif|jpg|png)$ {\n    root /data/images;\n}\n```\n该参数是一个正则表达式，它会匹配所有以 .gif，.jpg 或者 .png 结尾的 URIs。\n一个正则表达式需要以 ~ 开头。匹配到的请求会被映射到 /data/images 目录下。\n 当 nginx 在选择 location 去响应一个请求时，它会先检测带有前缀的 location 指令，记住先是检测带有最长前缀的 location，然后检测正则表达式。\n 如果有一个正则的匹配的规则，nginx 会选择该 location，否则，会选择之前缓存的规则。 最终，一个代理服务器的配置结果如下：\n```\n server {\n    location / {\n        proxy_pass http://localhost:8080/;\n    }\n\n    location ~ \\.(gif|jpg|png)$ {\n        root /data/images;\n    }\n}\n```\n\n该服务器会选择以 .gif，.jpg，或者 .png 结束的请求并且映射到 /data/images 目录（通过添加 URI 给 root 指令的参数），\n接着将其他所有的请求映射到上述被代理的服务器。 为了使用新的配置，像前几个章节描述的一样，需要向 nginx 发送重载信号。\n 这还有很多其他的指令，可以用于进一步配置代理连接。\n\n\n\n  ### location 配置\n 1. = 开头表示精确匹配\n 2. ^~ 开头表示uri以某个常规字符串开头，不是正则匹配\n 3. ~ 开头表示区分大小写的正则匹配;\n 4. ~* 开头表示不区分大小写的正则匹配\n 5. / 通用匹配, 如果没有其它匹配,任何请求都会匹配到\n","slug":"Nginx学习笔记","published":1,"updated":"2019-09-13T01:45:02.281Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0hpb4af0000ul6ve5b1odl3","content":"<h1 id=\"搭建一个简易的代理服务\"><a href=\"#搭建一个简易的代理服务\" class=\"headerlink\" title=\"搭建一个简易的代理服务\"></a>搭建一个简易的代理服务</h1><p>nginx 常常用来作为代理服务器，这代表着服务器接收请求，然后将它们传递给被代理服务器，得到请求的响应，再将它们发送给客户端。 我们将配置一个基本的代理服务器，它会处理本地图片文件的请求并返回其他的请求给被代理的服务器。在这个例子中，两个服务器都会定义在一个 nginx 实例中。 首先，通过在 nginx 配置文件中添加另一个 server 区块，来定义一个被代理的服务器，像下面的配置：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">    listen 8080;</span><br><span class=\"line\">    root /data/up1;</span><br><span class=\"line\"></span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a> \n\n\n<p>上面就是一个简单的服务器，它监听在 8080 端口（之前，listen 并没被定义，是因为默认监听的 80 端口）并且会映射所有的请求给 本地文件目录 /data/up1。创建该目录，然后添加 index.html 文件。注意，root 指令是放在 server 上下文中。当响应请求的 location 区块中，没有自己的 root 指令，上述的 root 指令才会被使用。 接着，使用前面章节中的 server 配置，然后将它改为一个代理服务配置。在第一个 location 区块中，放置已经添加被代理服务器的协议，名字和端口等参数的 proxy_pass 指令（在这里，就是 <a href=\"http://localhost:8080）\" target=\"_blank\" rel=\"noopener\">http://localhost:8080）</a>:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">        proxy_pass http://localhost:8080;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    location /images/ &#123;</span><br><span class=\"line\">        root /data;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"location相关\"><a href=\"#location相关\" class=\"headerlink\" title=\"location相关\"></a>location相关</h2><p>我们将修改第二个 location 区块，使他返回一些典型后缀的图片文件请求，<br>现在它只会映射带有 /images/ 前缀的请求到 /data/images 目录下。<br>修改后的 location 指令如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location ~ \\.(gif|jpg|png)$ &#123;</span><br><span class=\"line\">    root /data/images;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>该参数是一个正则表达式，它会匹配所有以 .gif，.jpg 或者 .png 结尾的 URIs。<br>一个正则表达式需要以 ~ 开头。匹配到的请求会被映射到 /data/images 目录下。<br> 当 nginx 在选择 location 去响应一个请求时，它会先检测带有前缀的 location 指令，记住先是检测带有最长前缀的 location，然后检测正则表达式。<br> 如果有一个正则的匹配的规则，nginx 会选择该 location，否则，会选择之前缓存的规则。 最终，一个代理服务器的配置结果如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> server &#123;</span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">        proxy_pass http://localhost:8080/;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    location ~ \\.(gif|jpg|png)$ &#123;</span><br><span class=\"line\">        root /data/images;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>该服务器会选择以 .gif，.jpg，或者 .png 结束的请求并且映射到 /data/images 目录（通过添加 URI 给 root 指令的参数），<br>接着将其他所有的请求映射到上述被代理的服务器。 为了使用新的配置，像前几个章节描述的一样，需要向 nginx 发送重载信号。<br> 这还有很多其他的指令，可以用于进一步配置代理连接。</p>\n<h3 id=\"location-配置\"><a href=\"#location-配置\" class=\"headerlink\" title=\"location 配置\"></a>location 配置</h3><ol>\n<li>= 开头表示精确匹配</li>\n<li>^~ 开头表示uri以某个常规字符串开头，不是正则匹配</li>\n<li>~ 开头表示区分大小写的正则匹配;</li>\n<li>~* 开头表示不区分大小写的正则匹配</li>\n<li>/ 通用匹配, 如果没有其它匹配,任何请求都会匹配到</li>\n</ol>\n","site":{"data":{}},"excerpt":"<h1 id=\"搭建一个简易的代理服务\"><a href=\"#搭建一个简易的代理服务\" class=\"headerlink\" title=\"搭建一个简易的代理服务\"></a>搭建一个简易的代理服务</h1><p>nginx 常常用来作为代理服务器，这代表着服务器接收请求，然后将它们传递给被代理服务器，得到请求的响应，再将它们发送给客户端。 我们将配置一个基本的代理服务器，它会处理本地图片文件的请求并返回其他的请求给被代理的服务器。在这个例子中，两个服务器都会定义在一个 nginx 实例中。 首先，通过在 nginx 配置文件中添加另一个 server 区块，来定义一个被代理的服务器，像下面的配置：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">    listen 8080;</span><br><span class=\"line\">    root /data/up1;</span><br><span class=\"line\"></span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","more":"<p>上面就是一个简单的服务器，它监听在 8080 端口（之前，listen 并没被定义，是因为默认监听的 80 端口）并且会映射所有的请求给 本地文件目录 /data/up1。创建该目录，然后添加 index.html 文件。注意，root 指令是放在 server 上下文中。当响应请求的 location 区块中，没有自己的 root 指令，上述的 root 指令才会被使用。 接着，使用前面章节中的 server 配置，然后将它改为一个代理服务配置。在第一个 location 区块中，放置已经添加被代理服务器的协议，名字和端口等参数的 proxy_pass 指令（在这里，就是 <a href=\"http://localhost:8080）\" target=\"_blank\" rel=\"noopener\">http://localhost:8080）</a>:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">        proxy_pass http://localhost:8080;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    location /images/ &#123;</span><br><span class=\"line\">        root /data;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"location相关\"><a href=\"#location相关\" class=\"headerlink\" title=\"location相关\"></a>location相关</h2><p>我们将修改第二个 location 区块，使他返回一些典型后缀的图片文件请求，<br>现在它只会映射带有 /images/ 前缀的请求到 /data/images 目录下。<br>修改后的 location 指令如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location ~ \\.(gif|jpg|png)$ &#123;</span><br><span class=\"line\">    root /data/images;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>该参数是一个正则表达式，它会匹配所有以 .gif，.jpg 或者 .png 结尾的 URIs。<br>一个正则表达式需要以 ~ 开头。匹配到的请求会被映射到 /data/images 目录下。<br> 当 nginx 在选择 location 去响应一个请求时，它会先检测带有前缀的 location 指令，记住先是检测带有最长前缀的 location，然后检测正则表达式。<br> 如果有一个正则的匹配的规则，nginx 会选择该 location，否则，会选择之前缓存的规则。 最终，一个代理服务器的配置结果如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> server &#123;</span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">        proxy_pass http://localhost:8080/;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    location ~ \\.(gif|jpg|png)$ &#123;</span><br><span class=\"line\">        root /data/images;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>该服务器会选择以 .gif，.jpg，或者 .png 结束的请求并且映射到 /data/images 目录（通过添加 URI 给 root 指令的参数），<br>接着将其他所有的请求映射到上述被代理的服务器。 为了使用新的配置，像前几个章节描述的一样，需要向 nginx 发送重载信号。<br> 这还有很多其他的指令，可以用于进一步配置代理连接。</p>\n<h3 id=\"location-配置\"><a href=\"#location-配置\" class=\"headerlink\" title=\"location 配置\"></a>location 配置</h3><ol>\n<li>= 开头表示精确匹配</li>\n<li>^~ 开头表示uri以某个常规字符串开头，不是正则匹配</li>\n<li>~ 开头表示区分大小写的正则匹配;</li>\n<li>~* 开头表示不区分大小写的正则匹配</li>\n<li>/ 通用匹配, 如果没有其它匹配,任何请求都会匹配到</li>\n</ol>"},{"title":"Prometheus+Grafana监控实践","date":"2019-06-30T16:00:00.000Z","_content":"\n#### 什么是Prometheus\n>Prometheus 是由 SoundCloud 开源监控告警解决方案，从 2012 年开始编写代码，再到 2015 年 github 上开源以来，已经吸引了 9k+ 关注，以及很多大公司的使用；2016 年 Prometheus 成为继 k8s 后，第二名 CNCF(Cloud Native Computing Foundation) 成员。\n\n作为新一代开源解决方案，很多理念与 Google SRE 运维之道不谋而合。\n\n\n#### 为什么选择prometheus：\n- Prometheus 是按照 Google SRE 运维之道的理念构建的，具有实用性和前瞻性。\n- Prometheus 社区非常活跃，基本稳定在 1个月1个版本的迭代速度，从 2016 年 v1.01 开始接触使用以来，到目前发布的 v1.8.2 以及最新最新的 v2.1 ，你会发现 Prometheus 一直在进步、在优化。\n- Go 语言开发，性能不错，安装部署简单，多平台部署兼容性好。\n- 丰富的数据收集客户端，官方提供了各种常用 exporter。\n- 丰富强大的查询能力,内置更强大的统计函数。\n- Prometheus 属于一站式监控告警平台，依赖少，功能齐全。\n- Prometheus支持对云或容器的监控，其他监控系统主要对主机监控。\n\n\n<!-- more -->\nPrometheus 在数据存储扩展性以及持久性上没有 InfluxDB，OpenTSDB，Sensu 好。\n\n\n#### 安装prometheus\n\n1. 下载二进制包\n```\n在这个页面https://prometheus.io/download\n找到最新的二进制包\nwget https://github.com/prometheus/prometheus/releases/download/v2.7.2/prometheus-2.7.2.linux-amd64.tar.gz\n```\n\n\n2. 解压并进入对应文件夹\n```\ntar xvfz prometheus-*.tar.gz\ncd prometheus-*\n```\n3. 启动prometheus\n```\n./prometheus --config.file=prometheus.yml\n```\n\n\n\ngrafana dashboard\n主机基础监控 dashboard id 9276\n\n\n\n\n\n\n##### 此时，prometheus 服务已在后台运行，注意暴露的端口号 9090（address=0.0.0.0:9090），可以直接在浏览器打开 ip:9090 查看简易控制台，此控制台可以做调试使用，需要更强大、美观的数据展示官方建议使用 Grafana.\n\n----\n\n#### 安装 grafana \n（数据展示<https://grafana.com>）\n\n```\nwget https://s3-us-west-2.amazonaws.com/grafana-releases/release/grafana-5.0.2-1.x86_64.rpm\n\nyum  localinstall grafana-5.0.2-1.x86_64.rpm\n\nservice grafana-server start\n```\n\n此时，grafana 服务已经启动，可以直接在浏览器中打开 localhost:3000 开始体验 grafana 了\n\n\n\n\n\n\n\n\n----\n\n\n####  exporter \n\nPrometheus官网有很多exporter，exporter可以理解为**采集客户端**，即采集指标，通过http方式暴露metrics给prometheus，Prometheus通过pull方式拉取这些指标。\n\n\n1. node_exporter（linux 系统信息采集器）\n\n```\nwget https://github.com/prometheus/node_exporter/releases/download/v0.18.0/node_exporter-0.18.0.linux-amd64.tar.gz\n\ntar -zxvf node_exporter-0.18.0.linux-amd64.tar.gz\n\ncd node_exporter-0.18.0.linux-amd64\n\nnohup ./node_exporter & （在后台运行系统信息采集器）\n ```\n 可以通过curl查看  \n curl 127.0.0.1:9100/metrics\n\n> Tips：0.16.0 版本在 centos 6.x 运行时报错 kernel too old，下载 0.15.2 或之前版本即可\nhttps://github.com/prometheus/node_exporter/releases/download/v0.15.2/node_exporter-0.15.2.linux-amd64.tar.gz\n\n此时，系统信息采集器已在后台运行，等待 prometheus 服务来拉取数据，注意暴露的端口号 9100（msg=\"Listening on :9100\"），prometheus 拉取数据需要使用此端口号\n\n\n\n\n#### 安装 prometheus \nprometheus <https://prometheus.io/>）\n```\nwget https://github.com/prometheus/prometheus/releases/download/v2.2.1/prometheus-2.2.1.linux-amd64.tar.gz\ntar -zxvf prometheus-2.2.1.linux-amd64.tar.gz\ncd prometheus-2.2.1.linux-amd64\n```\nvi prometheus.yml\n\n```\nglobal:\n  scrape_interval: 10s\n  evaluation_interval: 10s\n\nscrape_configs:\n  - job_name: prometheus\n    scrape_interval: 10s\n    static_configs:\n      - targets: ['localhost:9090']\n        labels:\n          instance: prometheus\n\n  - job_name: mysql\n    scrape_interval: 10s\n    static_configs:\n      - targets: ['localhost:9104']\n        labels:\n          instance: mysql\n\n  - job_name: 'linux'\n    scrape_interval: 10s\n    static_configs:\n      - targets: ['localhost:9100']\n        labels:\n          instance: linux\n```\n\n##### 启动\nnohup ./prometheus --config.file=\"prometheus.yml\" &（在后台运行 prometheus 服务）\n\n\n\n\n#### Prometheus配置的热加载\nPrometheus配置信息的热加载有两种方式：\n- 第一种热加载方式：查看Prometheus的进程id，发送SIGHUP信号:\nkill -HUP <pid>\n\n- 第二种热加载方式：发送一个POST请求到/-/reload，需要在启动时给定--web.enable-lifecycle选项：\ncurl -X POST http://localhost:9090/-/reload\n\n\n我们使用的是第一种热加载方式，systemd unit文件如下：\n```\n[Unit]\nDescription=prometheus\nAfter=network.target\n[Service]\nType=simple\nUser=prometheus\nExecStart=/usr/local/prometheus/prometheus \\\n --config.file=/usr/local/prometheus/prometheus.yml \\\n --storage.tsdb.path=/home/prometheus/data \\\n --storage.tsdb.retention=365d \\\n --web.listen-address=:9090 \\\n --web.external-url=https://prometheus.frognew.com\nExecReload=/bin/kill -HUP $MAINPID\nRestart=on-failure\n[Install]\nWantedBy=multi-user.target\n\n```\n\nsystemctl reload prometheus\n\n#### 告警服务 Alertmanager\n告警能力在Prometheus的架构中被划分成两个独立的部分。如下所示，通过在Prometheus中定义AlertRule（告警规则），Prometheus会周期性的对告警规则进行计算，如果满足告警触发条件就会向Alertmanager发送告警信息。\n![2957ddc2799240dd958cbdf9bf4a46f7.png](evernotecid://94C76643-58DA-4407-AFA8-9F2A33EF0AAA/appyinxiangcom/11651347/ENResource/p3081)\n\n\n#### 一些问题 \n\n1. 为什么选择 pull  而不是push\n通过HTTP提供了许多优势：\n- 您可以在开发更改时在笔记本电脑上运行监控。\n- 您可以更轻松地判断目标是否已关闭。\n- 您可以手动转到目标并使用Web浏览器检查其运行状况。\n总体而言，我们认为拉动比推动略好，但在考虑监控系统时，不应将其视为重点。\n\n\n\n\n附录:\n线上 Prometheus 配置文件 prometheus.yml\n```\n# my global config\nglobal:\n  scrape_interval:     30s # Set the scrape interval to every 15 seconds. Default is every 1 minute.\n  evaluation_interval: 30s # Evaluate rules every 15 seconds. The default is every 1 minute.\n  # scrape_timeout is set to the global default (10s).\n\n# Alertmanager configuration\nalerting:\n  alertmanagers:\n  - static_configs:\n    - targets:\n       - alertmanager:9093\n\n# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.\nrule_files:\n   - \"/etc/prometheus/rules/*.rules\"\n  # - \"second_rules.yml\"\n\n# A scrape configuration containing exactly one endpoint to scrape:\n# Here it's Prometheus itself.\nscrape_configs:\n  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.\n  - job_name: 'prometheus'\n\n    # metrics_path defaults to '/metrics'\n    # scheme defaults to 'http'.\n\n    static_configs:\n    - targets: ['localhost:9090']\n\n  - job_name: 'telegraf'\n    file_sd_configs:\n      - files: ['./*.json']\n\nremote_write:\n  - url: \"http://influxdb:8086/api/v1/prom/write?db=prometheus\"\n\nremote_read:\n  - url: \"http://influxdb:8086/api/v1/prom/read?db=prometheus\"\n```\n","source":"_posts/Prometheus.md","raw":"---\ntitle: Prometheus+Grafana监控实践\ndate: 2019-07-01\ntags: Prometheus\n---\n\n#### 什么是Prometheus\n>Prometheus 是由 SoundCloud 开源监控告警解决方案，从 2012 年开始编写代码，再到 2015 年 github 上开源以来，已经吸引了 9k+ 关注，以及很多大公司的使用；2016 年 Prometheus 成为继 k8s 后，第二名 CNCF(Cloud Native Computing Foundation) 成员。\n\n作为新一代开源解决方案，很多理念与 Google SRE 运维之道不谋而合。\n\n\n#### 为什么选择prometheus：\n- Prometheus 是按照 Google SRE 运维之道的理念构建的，具有实用性和前瞻性。\n- Prometheus 社区非常活跃，基本稳定在 1个月1个版本的迭代速度，从 2016 年 v1.01 开始接触使用以来，到目前发布的 v1.8.2 以及最新最新的 v2.1 ，你会发现 Prometheus 一直在进步、在优化。\n- Go 语言开发，性能不错，安装部署简单，多平台部署兼容性好。\n- 丰富的数据收集客户端，官方提供了各种常用 exporter。\n- 丰富强大的查询能力,内置更强大的统计函数。\n- Prometheus 属于一站式监控告警平台，依赖少，功能齐全。\n- Prometheus支持对云或容器的监控，其他监控系统主要对主机监控。\n\n\n<!-- more -->\nPrometheus 在数据存储扩展性以及持久性上没有 InfluxDB，OpenTSDB，Sensu 好。\n\n\n#### 安装prometheus\n\n1. 下载二进制包\n```\n在这个页面https://prometheus.io/download\n找到最新的二进制包\nwget https://github.com/prometheus/prometheus/releases/download/v2.7.2/prometheus-2.7.2.linux-amd64.tar.gz\n```\n\n\n2. 解压并进入对应文件夹\n```\ntar xvfz prometheus-*.tar.gz\ncd prometheus-*\n```\n3. 启动prometheus\n```\n./prometheus --config.file=prometheus.yml\n```\n\n\n\ngrafana dashboard\n主机基础监控 dashboard id 9276\n\n\n\n\n\n\n##### 此时，prometheus 服务已在后台运行，注意暴露的端口号 9090（address=0.0.0.0:9090），可以直接在浏览器打开 ip:9090 查看简易控制台，此控制台可以做调试使用，需要更强大、美观的数据展示官方建议使用 Grafana.\n\n----\n\n#### 安装 grafana \n（数据展示<https://grafana.com>）\n\n```\nwget https://s3-us-west-2.amazonaws.com/grafana-releases/release/grafana-5.0.2-1.x86_64.rpm\n\nyum  localinstall grafana-5.0.2-1.x86_64.rpm\n\nservice grafana-server start\n```\n\n此时，grafana 服务已经启动，可以直接在浏览器中打开 localhost:3000 开始体验 grafana 了\n\n\n\n\n\n\n\n\n----\n\n\n####  exporter \n\nPrometheus官网有很多exporter，exporter可以理解为**采集客户端**，即采集指标，通过http方式暴露metrics给prometheus，Prometheus通过pull方式拉取这些指标。\n\n\n1. node_exporter（linux 系统信息采集器）\n\n```\nwget https://github.com/prometheus/node_exporter/releases/download/v0.18.0/node_exporter-0.18.0.linux-amd64.tar.gz\n\ntar -zxvf node_exporter-0.18.0.linux-amd64.tar.gz\n\ncd node_exporter-0.18.0.linux-amd64\n\nnohup ./node_exporter & （在后台运行系统信息采集器）\n ```\n 可以通过curl查看  \n curl 127.0.0.1:9100/metrics\n\n> Tips：0.16.0 版本在 centos 6.x 运行时报错 kernel too old，下载 0.15.2 或之前版本即可\nhttps://github.com/prometheus/node_exporter/releases/download/v0.15.2/node_exporter-0.15.2.linux-amd64.tar.gz\n\n此时，系统信息采集器已在后台运行，等待 prometheus 服务来拉取数据，注意暴露的端口号 9100（msg=\"Listening on :9100\"），prometheus 拉取数据需要使用此端口号\n\n\n\n\n#### 安装 prometheus \nprometheus <https://prometheus.io/>）\n```\nwget https://github.com/prometheus/prometheus/releases/download/v2.2.1/prometheus-2.2.1.linux-amd64.tar.gz\ntar -zxvf prometheus-2.2.1.linux-amd64.tar.gz\ncd prometheus-2.2.1.linux-amd64\n```\nvi prometheus.yml\n\n```\nglobal:\n  scrape_interval: 10s\n  evaluation_interval: 10s\n\nscrape_configs:\n  - job_name: prometheus\n    scrape_interval: 10s\n    static_configs:\n      - targets: ['localhost:9090']\n        labels:\n          instance: prometheus\n\n  - job_name: mysql\n    scrape_interval: 10s\n    static_configs:\n      - targets: ['localhost:9104']\n        labels:\n          instance: mysql\n\n  - job_name: 'linux'\n    scrape_interval: 10s\n    static_configs:\n      - targets: ['localhost:9100']\n        labels:\n          instance: linux\n```\n\n##### 启动\nnohup ./prometheus --config.file=\"prometheus.yml\" &（在后台运行 prometheus 服务）\n\n\n\n\n#### Prometheus配置的热加载\nPrometheus配置信息的热加载有两种方式：\n- 第一种热加载方式：查看Prometheus的进程id，发送SIGHUP信号:\nkill -HUP <pid>\n\n- 第二种热加载方式：发送一个POST请求到/-/reload，需要在启动时给定--web.enable-lifecycle选项：\ncurl -X POST http://localhost:9090/-/reload\n\n\n我们使用的是第一种热加载方式，systemd unit文件如下：\n```\n[Unit]\nDescription=prometheus\nAfter=network.target\n[Service]\nType=simple\nUser=prometheus\nExecStart=/usr/local/prometheus/prometheus \\\n --config.file=/usr/local/prometheus/prometheus.yml \\\n --storage.tsdb.path=/home/prometheus/data \\\n --storage.tsdb.retention=365d \\\n --web.listen-address=:9090 \\\n --web.external-url=https://prometheus.frognew.com\nExecReload=/bin/kill -HUP $MAINPID\nRestart=on-failure\n[Install]\nWantedBy=multi-user.target\n\n```\n\nsystemctl reload prometheus\n\n#### 告警服务 Alertmanager\n告警能力在Prometheus的架构中被划分成两个独立的部分。如下所示，通过在Prometheus中定义AlertRule（告警规则），Prometheus会周期性的对告警规则进行计算，如果满足告警触发条件就会向Alertmanager发送告警信息。\n![2957ddc2799240dd958cbdf9bf4a46f7.png](evernotecid://94C76643-58DA-4407-AFA8-9F2A33EF0AAA/appyinxiangcom/11651347/ENResource/p3081)\n\n\n#### 一些问题 \n\n1. 为什么选择 pull  而不是push\n通过HTTP提供了许多优势：\n- 您可以在开发更改时在笔记本电脑上运行监控。\n- 您可以更轻松地判断目标是否已关闭。\n- 您可以手动转到目标并使用Web浏览器检查其运行状况。\n总体而言，我们认为拉动比推动略好，但在考虑监控系统时，不应将其视为重点。\n\n\n\n\n附录:\n线上 Prometheus 配置文件 prometheus.yml\n```\n# my global config\nglobal:\n  scrape_interval:     30s # Set the scrape interval to every 15 seconds. Default is every 1 minute.\n  evaluation_interval: 30s # Evaluate rules every 15 seconds. The default is every 1 minute.\n  # scrape_timeout is set to the global default (10s).\n\n# Alertmanager configuration\nalerting:\n  alertmanagers:\n  - static_configs:\n    - targets:\n       - alertmanager:9093\n\n# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.\nrule_files:\n   - \"/etc/prometheus/rules/*.rules\"\n  # - \"second_rules.yml\"\n\n# A scrape configuration containing exactly one endpoint to scrape:\n# Here it's Prometheus itself.\nscrape_configs:\n  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.\n  - job_name: 'prometheus'\n\n    # metrics_path defaults to '/metrics'\n    # scheme defaults to 'http'.\n\n    static_configs:\n    - targets: ['localhost:9090']\n\n  - job_name: 'telegraf'\n    file_sd_configs:\n      - files: ['./*.json']\n\nremote_write:\n  - url: \"http://influxdb:8086/api/v1/prom/write?db=prometheus\"\n\nremote_read:\n  - url: \"http://influxdb:8086/api/v1/prom/read?db=prometheus\"\n```\n","slug":"Prometheus","published":1,"updated":"2019-09-13T01:45:02.282Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0hpb4am0002ul6vf79tpaca","content":"<h4 id=\"什么是Prometheus\"><a href=\"#什么是Prometheus\" class=\"headerlink\" title=\"什么是Prometheus\"></a>什么是Prometheus</h4><blockquote>\n<p>Prometheus 是由 SoundCloud 开源监控告警解决方案，从 2012 年开始编写代码，再到 2015 年 github 上开源以来，已经吸引了 9k+ 关注，以及很多大公司的使用；2016 年 Prometheus 成为继 k8s 后，第二名 CNCF(Cloud Native Computing Foundation) 成员。</p>\n</blockquote>\n<p>作为新一代开源解决方案，很多理念与 Google SRE 运维之道不谋而合。</p>\n<h4 id=\"为什么选择prometheus：\"><a href=\"#为什么选择prometheus：\" class=\"headerlink\" title=\"为什么选择prometheus：\"></a>为什么选择prometheus：</h4><ul>\n<li>Prometheus 是按照 Google SRE 运维之道的理念构建的，具有实用性和前瞻性。</li>\n<li>Prometheus 社区非常活跃，基本稳定在 1个月1个版本的迭代速度，从 2016 年 v1.01 开始接触使用以来，到目前发布的 v1.8.2 以及最新最新的 v2.1 ，你会发现 Prometheus 一直在进步、在优化。</li>\n<li>Go 语言开发，性能不错，安装部署简单，多平台部署兼容性好。</li>\n<li>丰富的数据收集客户端，官方提供了各种常用 exporter。</li>\n<li>丰富强大的查询能力,内置更强大的统计函数。</li>\n<li>Prometheus 属于一站式监控告警平台，依赖少，功能齐全。</li>\n<li>Prometheus支持对云或容器的监控，其他监控系统主要对主机监控。</li>\n</ul>\n<a id=\"more\"></a>\n<p>Prometheus 在数据存储扩展性以及持久性上没有 InfluxDB，OpenTSDB，Sensu 好。</p>\n<h4 id=\"安装prometheus\"><a href=\"#安装prometheus\" class=\"headerlink\" title=\"安装prometheus\"></a>安装prometheus</h4><ol>\n<li><p>下载二进制包</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在这个页面https://prometheus.io/download</span><br><span class=\"line\">找到最新的二进制包</span><br><span class=\"line\">wget https://github.com/prometheus/prometheus/releases/download/v2.7.2/prometheus-2.7.2.linux-amd64.tar.gz</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>解压并进入对应文件夹</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar xvfz prometheus-*.tar.gz</span><br><span class=\"line\">cd prometheus-*</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动prometheus</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./prometheus --config.file=prometheus.yml</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<p>grafana dashboard<br>主机基础监控 dashboard id 9276</p>\n<h5 id=\"此时，prometheus-服务已在后台运行，注意暴露的端口号-9090（address-0-0-0-0-9090），可以直接在浏览器打开-ip-9090-查看简易控制台，此控制台可以做调试使用，需要更强大、美观的数据展示官方建议使用-Grafana\"><a href=\"#此时，prometheus-服务已在后台运行，注意暴露的端口号-9090（address-0-0-0-0-9090），可以直接在浏览器打开-ip-9090-查看简易控制台，此控制台可以做调试使用，需要更强大、美观的数据展示官方建议使用-Grafana\" class=\"headerlink\" title=\"此时，prometheus 服务已在后台运行，注意暴露的端口号 9090（address=0.0.0.0:9090），可以直接在浏览器打开 ip:9090 查看简易控制台，此控制台可以做调试使用，需要更强大、美观的数据展示官方建议使用 Grafana.\"></a>此时，prometheus 服务已在后台运行，注意暴露的端口号 9090（address=0.0.0.0:9090），可以直接在浏览器打开 ip:9090 查看简易控制台，此控制台可以做调试使用，需要更强大、美观的数据展示官方建议使用 Grafana.</h5><hr>\n<h4 id=\"安装-grafana\"><a href=\"#安装-grafana\" class=\"headerlink\" title=\"安装 grafana\"></a>安装 grafana</h4><p>（数据展示<a href=\"https://grafana.com\" target=\"_blank\" rel=\"noopener\">https://grafana.com</a>）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://s3-us-west-2.amazonaws.com/grafana-releases/release/grafana-5.0.2-1.x86_64.rpm</span><br><span class=\"line\"></span><br><span class=\"line\">yum  localinstall grafana-5.0.2-1.x86_64.rpm</span><br><span class=\"line\"></span><br><span class=\"line\">service grafana-server start</span><br></pre></td></tr></table></figure>\n\n<p>此时，grafana 服务已经启动，可以直接在浏览器中打开 localhost:3000 开始体验 grafana 了</p>\n<hr>\n<h4 id=\"exporter\"><a href=\"#exporter\" class=\"headerlink\" title=\"exporter\"></a>exporter</h4><p>Prometheus官网有很多exporter，exporter可以理解为<strong>采集客户端</strong>，即采集指标，通过http方式暴露metrics给prometheus，Prometheus通过pull方式拉取这些指标。</p>\n<ol>\n<li>node_exporter（linux 系统信息采集器）</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://github.com/prometheus/node_exporter/releases/download/v0.18.0/node_exporter-0.18.0.linux-amd64.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">tar -zxvf node_exporter-0.18.0.linux-amd64.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">cd node_exporter-0.18.0.linux-amd64</span><br><span class=\"line\"></span><br><span class=\"line\">nohup ./node_exporter &amp; （在后台运行系统信息采集器）</span><br></pre></td></tr></table></figure>\n\n<p> 可以通过curl查看<br> curl 127.0.0.1:9100/metrics</p>\n<blockquote>\n<p>Tips：0.16.0 版本在 centos 6.x 运行时报错 kernel too old，下载 0.15.2 或之前版本即可<br><a href=\"https://github.com/prometheus/node_exporter/releases/download/v0.15.2/node_exporter-0.15.2.linux-amd64.tar.gz\" target=\"_blank\" rel=\"noopener\">https://github.com/prometheus/node_exporter/releases/download/v0.15.2/node_exporter-0.15.2.linux-amd64.tar.gz</a></p>\n</blockquote>\n<p>此时，系统信息采集器已在后台运行，等待 prometheus 服务来拉取数据，注意暴露的端口号 9100（msg=”Listening on :9100”），prometheus 拉取数据需要使用此端口号</p>\n<h4 id=\"安装-prometheus\"><a href=\"#安装-prometheus\" class=\"headerlink\" title=\"安装 prometheus\"></a>安装 prometheus</h4><p>prometheus <a href=\"https://prometheus.io/\" target=\"_blank\" rel=\"noopener\">https://prometheus.io/</a>）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://github.com/prometheus/prometheus/releases/download/v2.2.1/prometheus-2.2.1.linux-amd64.tar.gz</span><br><span class=\"line\">tar -zxvf prometheus-2.2.1.linux-amd64.tar.gz</span><br><span class=\"line\">cd prometheus-2.2.1.linux-amd64</span><br></pre></td></tr></table></figure>\n\n<p>vi prometheus.yml</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">global:</span><br><span class=\"line\">  scrape_interval: 10s</span><br><span class=\"line\">  evaluation_interval: 10s</span><br><span class=\"line\"></span><br><span class=\"line\">scrape_configs:</span><br><span class=\"line\">  - job_name: prometheus</span><br><span class=\"line\">    scrape_interval: 10s</span><br><span class=\"line\">    static_configs:</span><br><span class=\"line\">      - targets: [&apos;localhost:9090&apos;]</span><br><span class=\"line\">        labels:</span><br><span class=\"line\">          instance: prometheus</span><br><span class=\"line\"></span><br><span class=\"line\">  - job_name: mysql</span><br><span class=\"line\">    scrape_interval: 10s</span><br><span class=\"line\">    static_configs:</span><br><span class=\"line\">      - targets: [&apos;localhost:9104&apos;]</span><br><span class=\"line\">        labels:</span><br><span class=\"line\">          instance: mysql</span><br><span class=\"line\"></span><br><span class=\"line\">  - job_name: &apos;linux&apos;</span><br><span class=\"line\">    scrape_interval: 10s</span><br><span class=\"line\">    static_configs:</span><br><span class=\"line\">      - targets: [&apos;localhost:9100&apos;]</span><br><span class=\"line\">        labels:</span><br><span class=\"line\">          instance: linux</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h5><p>nohup ./prometheus –config.file=”prometheus.yml” &amp;（在后台运行 prometheus 服务）</p>\n<h4 id=\"Prometheus配置的热加载\"><a href=\"#Prometheus配置的热加载\" class=\"headerlink\" title=\"Prometheus配置的热加载\"></a>Prometheus配置的热加载</h4><p>Prometheus配置信息的热加载有两种方式：</p>\n<ul>\n<li><p>第一种热加载方式：查看Prometheus的进程id，发送SIGHUP信号:<br>kill -HUP <pid></pid></p>\n</li>\n<li><p>第二种热加载方式：发送一个POST请求到/-/reload，需要在启动时给定–web.enable-lifecycle选项：<br>curl -X POST <a href=\"http://localhost:9090/-/reload\" target=\"_blank\" rel=\"noopener\">http://localhost:9090/-/reload</a></p>\n</li>\n</ul>\n<p>我们使用的是第一种热加载方式，systemd unit文件如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=prometheus</span><br><span class=\"line\">After=network.target</span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=simple</span><br><span class=\"line\">User=prometheus</span><br><span class=\"line\">ExecStart=/usr/local/prometheus/prometheus \\</span><br><span class=\"line\"> --config.file=/usr/local/prometheus/prometheus.yml \\</span><br><span class=\"line\"> --storage.tsdb.path=/home/prometheus/data \\</span><br><span class=\"line\"> --storage.tsdb.retention=365d \\</span><br><span class=\"line\"> --web.listen-address=:9090 \\</span><br><span class=\"line\"> --web.external-url=https://prometheus.frognew.com</span><br><span class=\"line\">ExecReload=/bin/kill -HUP $MAINPID</span><br><span class=\"line\">Restart=on-failure</span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>\n\n<p>systemctl reload prometheus</p>\n<h4 id=\"告警服务-Alertmanager\"><a href=\"#告警服务-Alertmanager\" class=\"headerlink\" title=\"告警服务 Alertmanager\"></a>告警服务 Alertmanager</h4><p>告警能力在Prometheus的架构中被划分成两个独立的部分。如下所示，通过在Prometheus中定义AlertRule（告警规则），Prometheus会周期性的对告警规则进行计算，如果满足告警触发条件就会向Alertmanager发送告警信息。<br><img src=\"evernotecid://94C76643-58DA-4407-AFA8-9F2A33EF0AAA/appyinxiangcom/11651347/ENResource/p3081\" alt=\"2957ddc2799240dd958cbdf9bf4a46f7.png\"></p>\n<h4 id=\"一些问题\"><a href=\"#一些问题\" class=\"headerlink\" title=\"一些问题\"></a>一些问题</h4><ol>\n<li>为什么选择 pull  而不是push<br>通过HTTP提供了许多优势：</li>\n</ol>\n<ul>\n<li>您可以在开发更改时在笔记本电脑上运行监控。</li>\n<li>您可以更轻松地判断目标是否已关闭。</li>\n<li>您可以手动转到目标并使用Web浏览器检查其运行状况。<br>总体而言，我们认为拉动比推动略好，但在考虑监控系统时，不应将其视为重点。</li>\n</ul>\n<p>附录:<br>线上 Prometheus 配置文件 prometheus.yml</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># my global config</span><br><span class=\"line\">global:</span><br><span class=\"line\">  scrape_interval:     30s # Set the scrape interval to every 15 seconds. Default is every 1 minute.</span><br><span class=\"line\">  evaluation_interval: 30s # Evaluate rules every 15 seconds. The default is every 1 minute.</span><br><span class=\"line\">  # scrape_timeout is set to the global default (10s).</span><br><span class=\"line\"></span><br><span class=\"line\"># Alertmanager configuration</span><br><span class=\"line\">alerting:</span><br><span class=\"line\">  alertmanagers:</span><br><span class=\"line\">  - static_configs:</span><br><span class=\"line\">    - targets:</span><br><span class=\"line\">       - alertmanager:9093</span><br><span class=\"line\"></span><br><span class=\"line\"># Load rules once and periodically evaluate them according to the global &apos;evaluation_interval&apos;.</span><br><span class=\"line\">rule_files:</span><br><span class=\"line\">   - &quot;/etc/prometheus/rules/*.rules&quot;</span><br><span class=\"line\">  # - &quot;second_rules.yml&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># A scrape configuration containing exactly one endpoint to scrape:</span><br><span class=\"line\"># Here it&apos;s Prometheus itself.</span><br><span class=\"line\">scrape_configs:</span><br><span class=\"line\">  # The job name is added as a label `job=&lt;job_name&gt;` to any timeseries scraped from this config.</span><br><span class=\"line\">  - job_name: &apos;prometheus&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">    # metrics_path defaults to &apos;/metrics&apos;</span><br><span class=\"line\">    # scheme defaults to &apos;http&apos;.</span><br><span class=\"line\"></span><br><span class=\"line\">    static_configs:</span><br><span class=\"line\">    - targets: [&apos;localhost:9090&apos;]</span><br><span class=\"line\"></span><br><span class=\"line\">  - job_name: &apos;telegraf&apos;</span><br><span class=\"line\">    file_sd_configs:</span><br><span class=\"line\">      - files: [&apos;./*.json&apos;]</span><br><span class=\"line\"></span><br><span class=\"line\">remote_write:</span><br><span class=\"line\">  - url: &quot;http://influxdb:8086/api/v1/prom/write?db=prometheus&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">remote_read:</span><br><span class=\"line\">  - url: &quot;http://influxdb:8086/api/v1/prom/read?db=prometheus&quot;</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<h4 id=\"什么是Prometheus\"><a href=\"#什么是Prometheus\" class=\"headerlink\" title=\"什么是Prometheus\"></a>什么是Prometheus</h4><blockquote>\n<p>Prometheus 是由 SoundCloud 开源监控告警解决方案，从 2012 年开始编写代码，再到 2015 年 github 上开源以来，已经吸引了 9k+ 关注，以及很多大公司的使用；2016 年 Prometheus 成为继 k8s 后，第二名 CNCF(Cloud Native Computing Foundation) 成员。</p>\n</blockquote>\n<p>作为新一代开源解决方案，很多理念与 Google SRE 运维之道不谋而合。</p>\n<h4 id=\"为什么选择prometheus：\"><a href=\"#为什么选择prometheus：\" class=\"headerlink\" title=\"为什么选择prometheus：\"></a>为什么选择prometheus：</h4><ul>\n<li>Prometheus 是按照 Google SRE 运维之道的理念构建的，具有实用性和前瞻性。</li>\n<li>Prometheus 社区非常活跃，基本稳定在 1个月1个版本的迭代速度，从 2016 年 v1.01 开始接触使用以来，到目前发布的 v1.8.2 以及最新最新的 v2.1 ，你会发现 Prometheus 一直在进步、在优化。</li>\n<li>Go 语言开发，性能不错，安装部署简单，多平台部署兼容性好。</li>\n<li>丰富的数据收集客户端，官方提供了各种常用 exporter。</li>\n<li>丰富强大的查询能力,内置更强大的统计函数。</li>\n<li>Prometheus 属于一站式监控告警平台，依赖少，功能齐全。</li>\n<li>Prometheus支持对云或容器的监控，其他监控系统主要对主机监控。</li>\n</ul>","more":"<p>Prometheus 在数据存储扩展性以及持久性上没有 InfluxDB，OpenTSDB，Sensu 好。</p>\n<h4 id=\"安装prometheus\"><a href=\"#安装prometheus\" class=\"headerlink\" title=\"安装prometheus\"></a>安装prometheus</h4><ol>\n<li><p>下载二进制包</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在这个页面https://prometheus.io/download</span><br><span class=\"line\">找到最新的二进制包</span><br><span class=\"line\">wget https://github.com/prometheus/prometheus/releases/download/v2.7.2/prometheus-2.7.2.linux-amd64.tar.gz</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>解压并进入对应文件夹</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar xvfz prometheus-*.tar.gz</span><br><span class=\"line\">cd prometheus-*</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动prometheus</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./prometheus --config.file=prometheus.yml</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<p>grafana dashboard<br>主机基础监控 dashboard id 9276</p>\n<h5 id=\"此时，prometheus-服务已在后台运行，注意暴露的端口号-9090（address-0-0-0-0-9090），可以直接在浏览器打开-ip-9090-查看简易控制台，此控制台可以做调试使用，需要更强大、美观的数据展示官方建议使用-Grafana\"><a href=\"#此时，prometheus-服务已在后台运行，注意暴露的端口号-9090（address-0-0-0-0-9090），可以直接在浏览器打开-ip-9090-查看简易控制台，此控制台可以做调试使用，需要更强大、美观的数据展示官方建议使用-Grafana\" class=\"headerlink\" title=\"此时，prometheus 服务已在后台运行，注意暴露的端口号 9090（address=0.0.0.0:9090），可以直接在浏览器打开 ip:9090 查看简易控制台，此控制台可以做调试使用，需要更强大、美观的数据展示官方建议使用 Grafana.\"></a>此时，prometheus 服务已在后台运行，注意暴露的端口号 9090（address=0.0.0.0:9090），可以直接在浏览器打开 ip:9090 查看简易控制台，此控制台可以做调试使用，需要更强大、美观的数据展示官方建议使用 Grafana.</h5><hr>\n<h4 id=\"安装-grafana\"><a href=\"#安装-grafana\" class=\"headerlink\" title=\"安装 grafana\"></a>安装 grafana</h4><p>（数据展示<a href=\"https://grafana.com\" target=\"_blank\" rel=\"noopener\">https://grafana.com</a>）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://s3-us-west-2.amazonaws.com/grafana-releases/release/grafana-5.0.2-1.x86_64.rpm</span><br><span class=\"line\"></span><br><span class=\"line\">yum  localinstall grafana-5.0.2-1.x86_64.rpm</span><br><span class=\"line\"></span><br><span class=\"line\">service grafana-server start</span><br></pre></td></tr></table></figure>\n\n<p>此时，grafana 服务已经启动，可以直接在浏览器中打开 localhost:3000 开始体验 grafana 了</p>\n<hr>\n<h4 id=\"exporter\"><a href=\"#exporter\" class=\"headerlink\" title=\"exporter\"></a>exporter</h4><p>Prometheus官网有很多exporter，exporter可以理解为<strong>采集客户端</strong>，即采集指标，通过http方式暴露metrics给prometheus，Prometheus通过pull方式拉取这些指标。</p>\n<ol>\n<li>node_exporter（linux 系统信息采集器）</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://github.com/prometheus/node_exporter/releases/download/v0.18.0/node_exporter-0.18.0.linux-amd64.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">tar -zxvf node_exporter-0.18.0.linux-amd64.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">cd node_exporter-0.18.0.linux-amd64</span><br><span class=\"line\"></span><br><span class=\"line\">nohup ./node_exporter &amp; （在后台运行系统信息采集器）</span><br></pre></td></tr></table></figure>\n\n<p> 可以通过curl查看<br> curl 127.0.0.1:9100/metrics</p>\n<blockquote>\n<p>Tips：0.16.0 版本在 centos 6.x 运行时报错 kernel too old，下载 0.15.2 或之前版本即可<br><a href=\"https://github.com/prometheus/node_exporter/releases/download/v0.15.2/node_exporter-0.15.2.linux-amd64.tar.gz\" target=\"_blank\" rel=\"noopener\">https://github.com/prometheus/node_exporter/releases/download/v0.15.2/node_exporter-0.15.2.linux-amd64.tar.gz</a></p>\n</blockquote>\n<p>此时，系统信息采集器已在后台运行，等待 prometheus 服务来拉取数据，注意暴露的端口号 9100（msg=”Listening on :9100”），prometheus 拉取数据需要使用此端口号</p>\n<h4 id=\"安装-prometheus\"><a href=\"#安装-prometheus\" class=\"headerlink\" title=\"安装 prometheus\"></a>安装 prometheus</h4><p>prometheus <a href=\"https://prometheus.io/\" target=\"_blank\" rel=\"noopener\">https://prometheus.io/</a>）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://github.com/prometheus/prometheus/releases/download/v2.2.1/prometheus-2.2.1.linux-amd64.tar.gz</span><br><span class=\"line\">tar -zxvf prometheus-2.2.1.linux-amd64.tar.gz</span><br><span class=\"line\">cd prometheus-2.2.1.linux-amd64</span><br></pre></td></tr></table></figure>\n\n<p>vi prometheus.yml</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">global:</span><br><span class=\"line\">  scrape_interval: 10s</span><br><span class=\"line\">  evaluation_interval: 10s</span><br><span class=\"line\"></span><br><span class=\"line\">scrape_configs:</span><br><span class=\"line\">  - job_name: prometheus</span><br><span class=\"line\">    scrape_interval: 10s</span><br><span class=\"line\">    static_configs:</span><br><span class=\"line\">      - targets: [&apos;localhost:9090&apos;]</span><br><span class=\"line\">        labels:</span><br><span class=\"line\">          instance: prometheus</span><br><span class=\"line\"></span><br><span class=\"line\">  - job_name: mysql</span><br><span class=\"line\">    scrape_interval: 10s</span><br><span class=\"line\">    static_configs:</span><br><span class=\"line\">      - targets: [&apos;localhost:9104&apos;]</span><br><span class=\"line\">        labels:</span><br><span class=\"line\">          instance: mysql</span><br><span class=\"line\"></span><br><span class=\"line\">  - job_name: &apos;linux&apos;</span><br><span class=\"line\">    scrape_interval: 10s</span><br><span class=\"line\">    static_configs:</span><br><span class=\"line\">      - targets: [&apos;localhost:9100&apos;]</span><br><span class=\"line\">        labels:</span><br><span class=\"line\">          instance: linux</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h5><p>nohup ./prometheus –config.file=”prometheus.yml” &amp;（在后台运行 prometheus 服务）</p>\n<h4 id=\"Prometheus配置的热加载\"><a href=\"#Prometheus配置的热加载\" class=\"headerlink\" title=\"Prometheus配置的热加载\"></a>Prometheus配置的热加载</h4><p>Prometheus配置信息的热加载有两种方式：</p>\n<ul>\n<li><p>第一种热加载方式：查看Prometheus的进程id，发送SIGHUP信号:<br>kill -HUP <pid></pid></p>\n</li>\n<li><p>第二种热加载方式：发送一个POST请求到/-/reload，需要在启动时给定–web.enable-lifecycle选项：<br>curl -X POST <a href=\"http://localhost:9090/-/reload\" target=\"_blank\" rel=\"noopener\">http://localhost:9090/-/reload</a></p>\n</li>\n</ul>\n<p>我们使用的是第一种热加载方式，systemd unit文件如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=prometheus</span><br><span class=\"line\">After=network.target</span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=simple</span><br><span class=\"line\">User=prometheus</span><br><span class=\"line\">ExecStart=/usr/local/prometheus/prometheus \\</span><br><span class=\"line\"> --config.file=/usr/local/prometheus/prometheus.yml \\</span><br><span class=\"line\"> --storage.tsdb.path=/home/prometheus/data \\</span><br><span class=\"line\"> --storage.tsdb.retention=365d \\</span><br><span class=\"line\"> --web.listen-address=:9090 \\</span><br><span class=\"line\"> --web.external-url=https://prometheus.frognew.com</span><br><span class=\"line\">ExecReload=/bin/kill -HUP $MAINPID</span><br><span class=\"line\">Restart=on-failure</span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>\n\n<p>systemctl reload prometheus</p>\n<h4 id=\"告警服务-Alertmanager\"><a href=\"#告警服务-Alertmanager\" class=\"headerlink\" title=\"告警服务 Alertmanager\"></a>告警服务 Alertmanager</h4><p>告警能力在Prometheus的架构中被划分成两个独立的部分。如下所示，通过在Prometheus中定义AlertRule（告警规则），Prometheus会周期性的对告警规则进行计算，如果满足告警触发条件就会向Alertmanager发送告警信息。<br><img src=\"evernotecid://94C76643-58DA-4407-AFA8-9F2A33EF0AAA/appyinxiangcom/11651347/ENResource/p3081\" alt=\"2957ddc2799240dd958cbdf9bf4a46f7.png\"></p>\n<h4 id=\"一些问题\"><a href=\"#一些问题\" class=\"headerlink\" title=\"一些问题\"></a>一些问题</h4><ol>\n<li>为什么选择 pull  而不是push<br>通过HTTP提供了许多优势：</li>\n</ol>\n<ul>\n<li>您可以在开发更改时在笔记本电脑上运行监控。</li>\n<li>您可以更轻松地判断目标是否已关闭。</li>\n<li>您可以手动转到目标并使用Web浏览器检查其运行状况。<br>总体而言，我们认为拉动比推动略好，但在考虑监控系统时，不应将其视为重点。</li>\n</ul>\n<p>附录:<br>线上 Prometheus 配置文件 prometheus.yml</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># my global config</span><br><span class=\"line\">global:</span><br><span class=\"line\">  scrape_interval:     30s # Set the scrape interval to every 15 seconds. Default is every 1 minute.</span><br><span class=\"line\">  evaluation_interval: 30s # Evaluate rules every 15 seconds. The default is every 1 minute.</span><br><span class=\"line\">  # scrape_timeout is set to the global default (10s).</span><br><span class=\"line\"></span><br><span class=\"line\"># Alertmanager configuration</span><br><span class=\"line\">alerting:</span><br><span class=\"line\">  alertmanagers:</span><br><span class=\"line\">  - static_configs:</span><br><span class=\"line\">    - targets:</span><br><span class=\"line\">       - alertmanager:9093</span><br><span class=\"line\"></span><br><span class=\"line\"># Load rules once and periodically evaluate them according to the global &apos;evaluation_interval&apos;.</span><br><span class=\"line\">rule_files:</span><br><span class=\"line\">   - &quot;/etc/prometheus/rules/*.rules&quot;</span><br><span class=\"line\">  # - &quot;second_rules.yml&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># A scrape configuration containing exactly one endpoint to scrape:</span><br><span class=\"line\"># Here it&apos;s Prometheus itself.</span><br><span class=\"line\">scrape_configs:</span><br><span class=\"line\">  # The job name is added as a label `job=&lt;job_name&gt;` to any timeseries scraped from this config.</span><br><span class=\"line\">  - job_name: &apos;prometheus&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">    # metrics_path defaults to &apos;/metrics&apos;</span><br><span class=\"line\">    # scheme defaults to &apos;http&apos;.</span><br><span class=\"line\"></span><br><span class=\"line\">    static_configs:</span><br><span class=\"line\">    - targets: [&apos;localhost:9090&apos;]</span><br><span class=\"line\"></span><br><span class=\"line\">  - job_name: &apos;telegraf&apos;</span><br><span class=\"line\">    file_sd_configs:</span><br><span class=\"line\">      - files: [&apos;./*.json&apos;]</span><br><span class=\"line\"></span><br><span class=\"line\">remote_write:</span><br><span class=\"line\">  - url: &quot;http://influxdb:8086/api/v1/prom/write?db=prometheus&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">remote_read:</span><br><span class=\"line\">  - url: &quot;http://influxdb:8086/api/v1/prom/read?db=prometheus&quot;</span><br></pre></td></tr></table></figure>"},{"title":"VScode使用笔记","date":"2019-01-13T16:00:00.000Z","_content":"\n\n> 电脑可能会换，系统可能会换，但是编辑器，可能会跟你很久.\n\n##### 推荐安装插件:\n1. Atom One Dark Theme   #Atom主题\n2. Settings Sync         #配置同步\n3. VSCode Great Icons    #文件图标替换\n\n\n##### VScode写Python \n比如要自动格式化代码，只需要按下Alt+Shift+F，vscode就会调用autopep8自动格式化代码\n然后就开始自动安装autopep8. autopep8在每个python环境中都要安装 \n如果是是用python-autopep8的插件 则要在终端中使用brew install autopep8\n\npython虚拟环境:virtualenv","source":"_posts/VScode使用笔记.md","raw":"---\ntitle: VScode使用笔记\ndate: 2019-01-14\ntags: IDE\n---\n\n\n> 电脑可能会换，系统可能会换，但是编辑器，可能会跟你很久.\n\n##### 推荐安装插件:\n1. Atom One Dark Theme   #Atom主题\n2. Settings Sync         #配置同步\n3. VSCode Great Icons    #文件图标替换\n\n\n##### VScode写Python \n比如要自动格式化代码，只需要按下Alt+Shift+F，vscode就会调用autopep8自动格式化代码\n然后就开始自动安装autopep8. autopep8在每个python环境中都要安装 \n如果是是用python-autopep8的插件 则要在终端中使用brew install autopep8\n\npython虚拟环境:virtualenv","slug":"VScode使用笔记","published":1,"updated":"2019-09-13T01:45:02.283Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0hpb4as0005ul6v8q2zqc95","content":"<blockquote>\n<p>电脑可能会换，系统可能会换，但是编辑器，可能会跟你很久.</p>\n</blockquote>\n<h5 id=\"推荐安装插件\"><a href=\"#推荐安装插件\" class=\"headerlink\" title=\"推荐安装插件:\"></a>推荐安装插件:</h5><ol>\n<li>Atom One Dark Theme   #Atom主题</li>\n<li>Settings Sync         #配置同步</li>\n<li>VSCode Great Icons    #文件图标替换</li>\n</ol>\n<h5 id=\"VScode写Python\"><a href=\"#VScode写Python\" class=\"headerlink\" title=\"VScode写Python\"></a>VScode写Python</h5><p>比如要自动格式化代码，只需要按下Alt+Shift+F，vscode就会调用autopep8自动格式化代码<br>然后就开始自动安装autopep8. autopep8在每个python环境中都要安装<br>如果是是用python-autopep8的插件 则要在终端中使用brew install autopep8</p>\n<p>python虚拟环境:virtualenv</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>电脑可能会换，系统可能会换，但是编辑器，可能会跟你很久.</p>\n</blockquote>\n<h5 id=\"推荐安装插件\"><a href=\"#推荐安装插件\" class=\"headerlink\" title=\"推荐安装插件:\"></a>推荐安装插件:</h5><ol>\n<li>Atom One Dark Theme   #Atom主题</li>\n<li>Settings Sync         #配置同步</li>\n<li>VSCode Great Icons    #文件图标替换</li>\n</ol>\n<h5 id=\"VScode写Python\"><a href=\"#VScode写Python\" class=\"headerlink\" title=\"VScode写Python\"></a>VScode写Python</h5><p>比如要自动格式化代码，只需要按下Alt+Shift+F，vscode就会调用autopep8自动格式化代码<br>然后就开始自动安装autopep8. autopep8在每个python环境中都要安装<br>如果是是用python-autopep8的插件 则要在终端中使用brew install autopep8</p>\n<p>python虚拟环境:virtualenv</p>\n"},{"title":"Yum 命令被锁","date":"2018-02-14T16:00:00.000Z","_content":"\n```\nroot@centos001 ~]# yum clean all      //执行一个yum命令\n已加载插件：fastestmirror\nRepodata is over 2 weeks old. Install yum-cron? Or run: yum makecache fast\n/var/run/yum.pid 已被锁定，PID 为 2308 的另一个程序正在运行。  //可以看到文件被锁定\n\n```\n<!-- more --> \n\n\n#### 此处发现命令被锁，无法使用新的yum命令\n\n解决方法\n\n1. 先用CTRL+Z暂停命令\n2. 输入命令：\n```\nrm -f /var/run/yum.pid    //删除这个文件\n```\n3 在执行yum命令就ok了\n```\n[root@centos001 ~]# yum clean all\n已加载插件：fastestmirror\n正在清理软件源： base extras updates\nCleaning up everything\n```\n","source":"_posts/Yum命令被锁解决.md","raw":"---\ntitle: Yum 命令被锁\ndate: 2018-02-015\ntags: Linux\n---\n\n```\nroot@centos001 ~]# yum clean all      //执行一个yum命令\n已加载插件：fastestmirror\nRepodata is over 2 weeks old. Install yum-cron? Or run: yum makecache fast\n/var/run/yum.pid 已被锁定，PID 为 2308 的另一个程序正在运行。  //可以看到文件被锁定\n\n```\n<!-- more --> \n\n\n#### 此处发现命令被锁，无法使用新的yum命令\n\n解决方法\n\n1. 先用CTRL+Z暂停命令\n2. 输入命令：\n```\nrm -f /var/run/yum.pid    //删除这个文件\n```\n3 在执行yum命令就ok了\n```\n[root@centos001 ~]# yum clean all\n已加载插件：fastestmirror\n正在清理软件源： base extras updates\nCleaning up everything\n```\n","slug":"Yum命令被锁解决","published":1,"updated":"2019-09-13T01:45:02.283Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0hpb4au0006ul6v3rtqget6","content":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@centos001 ~]# yum clean all      //执行一个yum命令</span><br><span class=\"line\">已加载插件：fastestmirror</span><br><span class=\"line\">Repodata is over 2 weeks old. Install yum-cron? Or run: yum makecache fast</span><br><span class=\"line\">/var/run/yum.pid 已被锁定，PID 为 2308 的另一个程序正在运行。  //可以看到文件被锁定</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a> \n\n\n<h4 id=\"此处发现命令被锁，无法使用新的yum命令\"><a href=\"#此处发现命令被锁，无法使用新的yum命令\" class=\"headerlink\" title=\"此处发现命令被锁，无法使用新的yum命令\"></a>此处发现命令被锁，无法使用新的yum命令</h4><p>解决方法</p>\n<ol>\n<li>先用CTRL+Z暂停命令</li>\n<li>输入命令：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rm -f /var/run/yum.pid    //删除这个文件</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<p>3 在执行yum命令就ok了</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@centos001 ~]# yum clean all</span><br><span class=\"line\">已加载插件：fastestmirror</span><br><span class=\"line\">正在清理软件源： base extras updates</span><br><span class=\"line\">Cleaning up everything</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@centos001 ~]# yum clean all      //执行一个yum命令</span><br><span class=\"line\">已加载插件：fastestmirror</span><br><span class=\"line\">Repodata is over 2 weeks old. Install yum-cron? Or run: yum makecache fast</span><br><span class=\"line\">/var/run/yum.pid 已被锁定，PID 为 2308 的另一个程序正在运行。  //可以看到文件被锁定</span><br></pre></td></tr></table></figure>","more":"<h4 id=\"此处发现命令被锁，无法使用新的yum命令\"><a href=\"#此处发现命令被锁，无法使用新的yum命令\" class=\"headerlink\" title=\"此处发现命令被锁，无法使用新的yum命令\"></a>此处发现命令被锁，无法使用新的yum命令</h4><p>解决方法</p>\n<ol>\n<li>先用CTRL+Z暂停命令</li>\n<li>输入命令：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rm -f /var/run/yum.pid    //删除这个文件</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<p>3 在执行yum命令就ok了</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@centos001 ~]# yum clean all</span><br><span class=\"line\">已加载插件：fastestmirror</span><br><span class=\"line\">正在清理软件源： base extras updates</span><br><span class=\"line\">Cleaning up everything</span><br></pre></td></tr></table></figure>"},{"title":"Gerrit CodeReview代码审核工具搭建配置","date":"2018-04-17T16:00:00.000Z","_content":"\n### 一、环境准备\n1. OS:centos6.8\ngerrit依赖 (java&git)\nyum -y install java-1.8.0\n安装git 2.14.1 (低版本git同步gitlab时会出问题)\nyum install -y  http://opensource.wandisco.com/centos/6/git/x86_64/wandisco-git-release-6-1.noarch.rpm\nyum install -y git\nyum -y install epel-release && yum -y install nginx httpd-tools\n\n2. gerrit环境\n下载：Gerrit 2.15.1  wget https://www.gerritcodereview.com/download/gerrit-2.15.1.war\n<!-- more --> \n\n3. gerrit管理帐号(可选，使用独立账号配置gerrit)\ngerrit依赖，用来管理gerrit。\nsudo adduser gerrit\nsudo passwd gerrit\n并将gerrit加入sudo权限\nsudo vi /etc/sudoers\ngerrit  ALL=(ALL:ALL) ALL\n备注：这里我直接使用root用户安装\n\n\n### 二. 安装与配置gerrit\n1. 配置gerrit\n默认安装：java -jar gerrit-2.15.1.war init -d /usr/local/review(此目录最好放在空间比较大的目录)\n\n> 配置的时候 该选择Y的时候要选择Y\n\nInstall Verified label         [y/N]? N    //如果选择默认的话 会出现没有submit按钮\nInstall plugin download-commands version v2.13.4 [y/N]? y  //如果不安装 会出现创建项目没有clone地址\n\n更新配置文件：vim /usr/local/review/etc/gerrit.config\n\n```\n[gerrit]\n        basePath = git\n        serverId = 90b8d687-f735-4a2c-b117-0518fe571670\n        canonicalWebUrl = http://192.168.2.238:8080/\n[database]\n        type = h2\n        database = /usr/local/review/db/ReviewDB\n[index]\n        type = LUCENE\n[auth]\n        type = HTTP\n[receive]\n        enableSignedPush = true\n[sendemail]\n        enable = true\n        smtpServer = smtp.exmail.qq.com\n        smtpServerPort = 465  \n        smtpEncryption = ssl\n        smtpUser = *@*.com\n        smtpPass = ***\n        sslVerify = false\n        from = Code Review <*@*.comm>\n[container]\n        user = root\n        javaHome = /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.171-3.b10.el6_9.x86_64/jre\n[sshd]\n        listenAddress = *:29418\n[httpd]\n        listenUrl = http://192.168.2.238:8080/\n[cache]\n        directory = cache\n```\n2. 配置nginx反向代理\n配置：vim gerrit.conf\n```\nserver {\n         listen 80;\n         server_name 192.168.2.238;\n         auth_basic \"Welcomme to Gerrit Code Review Site!\";\n         auth_basic_user_file /opt/.passwd;\n         location / {\n            proxy_pass  http://192.168.2.238:8080;\n         }\n       }\n```\n\n\n3. 配置gerrit账户密码 创建认证用户(通过httpd-tools工具)\ntouch /opt/.passwd\nhtpasswd -c -b /opt/.passwd admin 123456(管理员)\n\n4. 启动gerrit&启动nginx\nsudo /usr/local/review/bin/gerrit.sh restart\nservice nginx start\n\n5. 访问gerrit 管理界面 http://xxx.xxxxx.com/\n第一次访问，需要输入第3步设置的admin及密码，该账户将作为gerrit管理员账户。\n\n### 三、如何使用gerrit\n前提：需要git使用端 / gerrit服务端配合使用。\n1. 添加项目(gerrit 服务端)\n1.1 使用gerrit添加新项目：（适用于开启新项目并使用gerrit）\n使用gerrit管理界面创建项目\n\n1.2使用gerrit添加已有项目：（适用于已有项目下移植到gerrit中）\nssh -p 3389 gerrit1@公网IP gerrit create-project --name exist-project #建议采用管理界面添加\n或者使用gerrit管理界面\n然后将已有项目与gerrit上建立的exist-project关联，即将已有代码库代码push到gerrit中进行管理。\ncd /usr/local/review/git/exist-project\ngit push ssh://gerrit1@公网IP:3389/exist-project *:*\n\n2. 生成sshkey(git使用端)\n在开发账户中生成sshkey，用作与gerrit服务器连接。\nssh-keygen -t rsa #生成sshkey\n\ncat ~/.ssh/id_rsa.pub #查看sshkey\n\n3. 添加sshkey到gerrit服务器(gerrit 服务端)\n此步骤与git流程类似，即将/root/.ssh/id_rsa.pub内容添加到gerri和gitlab(后面gerrit和gitlab直接同步)\n\n4. 拉取代码＆配置git hooks(git client端)\n验证sshkey是否配置成功：ssh -p 29418 admin@192.168.199.222\n\n拉取代码url：选择 clone with commit-msg hook  //会直接配置Change-ID gerrit流程必备\n\n修改代码并提交，推送时与原有git流程不一致，采用 git push origin HEAD:refs/for/master\n\n### 四.使用gerrit website完成code review\n当完成push后，可在gerrit管理界面看到当前提交code review的change。\n查看需要code review的提交：\n查看某次提交的详细信息（审核者+2可通过本次提交，提交者可通过Abandon本次提交）：\n如果审核者+2通过后，可提交该次commit.\n\n##### 配置gerrit和gitlab同步\ngerrit和gitlab同步需要配置两个地方 (前提示已将sshkey 添加至gerrit和gitlab)\n\n配置 /root/.ssh/config\n````\nHost 192.168.2.244\n    User root\n    IdentityFile ~/.ssh/id_rsa\n    StrictHostKeyChecking no\n    UserKnownHostsFile /dev/null\n    PreferredAuthentications publickey\n````\n\n配置replation插件\n/usr/local/review/etc/replication.config   //以实际gerrit安装位置为准\n\n````\n[remote \"192.168.2.244\"]\n         url = git@192.168.2.244:root/${name}.git\n         push = +refs/heads/*:refs/heads/*\n         push = +refs/tags/*:refs/tags/*\n         push = +refs/changes/*:refs/changes/*\n         timtout = 30\n         threads = 3\n````\n\n### 五.gerrit注意事项\n* 需要为每个使用者分配gerrit账号，不要都使用admin账号，因为admin账号可直接push master\n* push代码时需要使用\ngit push origin HEAD:refs/for/master(branch),gerrit默认关闭非admin账号的push direct权限\n* push代码时需要commit email与gerrit logoutaccount email一致，否则无法push成功，可选择关闭email notify，并开启forge user权限，或者通过修改gerrit数据库account email信息\n* git配置的email一定要和gerrit里注册的email一致，否者push会出错\n* gerrit数据库与gitlab同步，需要安装replication插件，并开启该功能\n","source":"_posts/gerrit CodeReview工具搭建配置.md","raw":"---\ntitle: Gerrit CodeReview代码审核工具搭建配置\ndate: 2018-04-018\ntags: [gitlab,gerrit,CodeReview]\n---\n\n### 一、环境准备\n1. OS:centos6.8\ngerrit依赖 (java&git)\nyum -y install java-1.8.0\n安装git 2.14.1 (低版本git同步gitlab时会出问题)\nyum install -y  http://opensource.wandisco.com/centos/6/git/x86_64/wandisco-git-release-6-1.noarch.rpm\nyum install -y git\nyum -y install epel-release && yum -y install nginx httpd-tools\n\n2. gerrit环境\n下载：Gerrit 2.15.1  wget https://www.gerritcodereview.com/download/gerrit-2.15.1.war\n<!-- more --> \n\n3. gerrit管理帐号(可选，使用独立账号配置gerrit)\ngerrit依赖，用来管理gerrit。\nsudo adduser gerrit\nsudo passwd gerrit\n并将gerrit加入sudo权限\nsudo vi /etc/sudoers\ngerrit  ALL=(ALL:ALL) ALL\n备注：这里我直接使用root用户安装\n\n\n### 二. 安装与配置gerrit\n1. 配置gerrit\n默认安装：java -jar gerrit-2.15.1.war init -d /usr/local/review(此目录最好放在空间比较大的目录)\n\n> 配置的时候 该选择Y的时候要选择Y\n\nInstall Verified label         [y/N]? N    //如果选择默认的话 会出现没有submit按钮\nInstall plugin download-commands version v2.13.4 [y/N]? y  //如果不安装 会出现创建项目没有clone地址\n\n更新配置文件：vim /usr/local/review/etc/gerrit.config\n\n```\n[gerrit]\n        basePath = git\n        serverId = 90b8d687-f735-4a2c-b117-0518fe571670\n        canonicalWebUrl = http://192.168.2.238:8080/\n[database]\n        type = h2\n        database = /usr/local/review/db/ReviewDB\n[index]\n        type = LUCENE\n[auth]\n        type = HTTP\n[receive]\n        enableSignedPush = true\n[sendemail]\n        enable = true\n        smtpServer = smtp.exmail.qq.com\n        smtpServerPort = 465  \n        smtpEncryption = ssl\n        smtpUser = *@*.com\n        smtpPass = ***\n        sslVerify = false\n        from = Code Review <*@*.comm>\n[container]\n        user = root\n        javaHome = /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.171-3.b10.el6_9.x86_64/jre\n[sshd]\n        listenAddress = *:29418\n[httpd]\n        listenUrl = http://192.168.2.238:8080/\n[cache]\n        directory = cache\n```\n2. 配置nginx反向代理\n配置：vim gerrit.conf\n```\nserver {\n         listen 80;\n         server_name 192.168.2.238;\n         auth_basic \"Welcomme to Gerrit Code Review Site!\";\n         auth_basic_user_file /opt/.passwd;\n         location / {\n            proxy_pass  http://192.168.2.238:8080;\n         }\n       }\n```\n\n\n3. 配置gerrit账户密码 创建认证用户(通过httpd-tools工具)\ntouch /opt/.passwd\nhtpasswd -c -b /opt/.passwd admin 123456(管理员)\n\n4. 启动gerrit&启动nginx\nsudo /usr/local/review/bin/gerrit.sh restart\nservice nginx start\n\n5. 访问gerrit 管理界面 http://xxx.xxxxx.com/\n第一次访问，需要输入第3步设置的admin及密码，该账户将作为gerrit管理员账户。\n\n### 三、如何使用gerrit\n前提：需要git使用端 / gerrit服务端配合使用。\n1. 添加项目(gerrit 服务端)\n1.1 使用gerrit添加新项目：（适用于开启新项目并使用gerrit）\n使用gerrit管理界面创建项目\n\n1.2使用gerrit添加已有项目：（适用于已有项目下移植到gerrit中）\nssh -p 3389 gerrit1@公网IP gerrit create-project --name exist-project #建议采用管理界面添加\n或者使用gerrit管理界面\n然后将已有项目与gerrit上建立的exist-project关联，即将已有代码库代码push到gerrit中进行管理。\ncd /usr/local/review/git/exist-project\ngit push ssh://gerrit1@公网IP:3389/exist-project *:*\n\n2. 生成sshkey(git使用端)\n在开发账户中生成sshkey，用作与gerrit服务器连接。\nssh-keygen -t rsa #生成sshkey\n\ncat ~/.ssh/id_rsa.pub #查看sshkey\n\n3. 添加sshkey到gerrit服务器(gerrit 服务端)\n此步骤与git流程类似，即将/root/.ssh/id_rsa.pub内容添加到gerri和gitlab(后面gerrit和gitlab直接同步)\n\n4. 拉取代码＆配置git hooks(git client端)\n验证sshkey是否配置成功：ssh -p 29418 admin@192.168.199.222\n\n拉取代码url：选择 clone with commit-msg hook  //会直接配置Change-ID gerrit流程必备\n\n修改代码并提交，推送时与原有git流程不一致，采用 git push origin HEAD:refs/for/master\n\n### 四.使用gerrit website完成code review\n当完成push后，可在gerrit管理界面看到当前提交code review的change。\n查看需要code review的提交：\n查看某次提交的详细信息（审核者+2可通过本次提交，提交者可通过Abandon本次提交）：\n如果审核者+2通过后，可提交该次commit.\n\n##### 配置gerrit和gitlab同步\ngerrit和gitlab同步需要配置两个地方 (前提示已将sshkey 添加至gerrit和gitlab)\n\n配置 /root/.ssh/config\n````\nHost 192.168.2.244\n    User root\n    IdentityFile ~/.ssh/id_rsa\n    StrictHostKeyChecking no\n    UserKnownHostsFile /dev/null\n    PreferredAuthentications publickey\n````\n\n配置replation插件\n/usr/local/review/etc/replication.config   //以实际gerrit安装位置为准\n\n````\n[remote \"192.168.2.244\"]\n         url = git@192.168.2.244:root/${name}.git\n         push = +refs/heads/*:refs/heads/*\n         push = +refs/tags/*:refs/tags/*\n         push = +refs/changes/*:refs/changes/*\n         timtout = 30\n         threads = 3\n````\n\n### 五.gerrit注意事项\n* 需要为每个使用者分配gerrit账号，不要都使用admin账号，因为admin账号可直接push master\n* push代码时需要使用\ngit push origin HEAD:refs/for/master(branch),gerrit默认关闭非admin账号的push direct权限\n* push代码时需要commit email与gerrit logoutaccount email一致，否则无法push成功，可选择关闭email notify，并开启forge user权限，或者通过修改gerrit数据库account email信息\n* git配置的email一定要和gerrit里注册的email一致，否者push会出错\n* gerrit数据库与gitlab同步，需要安装replication插件，并开启该功能\n","slug":"gerrit CodeReview工具搭建配置","published":1,"updated":"2019-09-13T01:45:02.284Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0hpb4av0007ul6v6o2v7cuu","content":"<h3 id=\"一、环境准备\"><a href=\"#一、环境准备\" class=\"headerlink\" title=\"一、环境准备\"></a>一、环境准备</h3><ol>\n<li><p>OS:centos6.8<br>gerrit依赖 (java&amp;git)<br>yum -y install java-1.8.0<br>安装git 2.14.1 (低版本git同步gitlab时会出问题)<br>yum install -y  <a href=\"http://opensource.wandisco.com/centos/6/git/x86_64/wandisco-git-release-6-1.noarch.rpm\" target=\"_blank\" rel=\"noopener\">http://opensource.wandisco.com/centos/6/git/x86_64/wandisco-git-release-6-1.noarch.rpm</a><br>yum install -y git<br>yum -y install epel-release &amp;&amp; yum -y install nginx httpd-tools</p>\n</li>\n<li><p>gerrit环境<br>下载：Gerrit 2.15.1  wget <a href=\"https://www.gerritcodereview.com/download/gerrit-2.15.1.war\" target=\"_blank\" rel=\"noopener\">https://www.gerritcodereview.com/download/gerrit-2.15.1.war</a></p>\n<a id=\"more\"></a> \n</li>\n<li><p>gerrit管理帐号(可选，使用独立账号配置gerrit)<br>gerrit依赖，用来管理gerrit。<br>sudo adduser gerrit<br>sudo passwd gerrit<br>并将gerrit加入sudo权限<br>sudo vi /etc/sudoers<br>gerrit  ALL=(ALL:ALL) ALL<br>备注：这里我直接使用root用户安装</p>\n</li>\n</ol>\n<h3 id=\"二-安装与配置gerrit\"><a href=\"#二-安装与配置gerrit\" class=\"headerlink\" title=\"二. 安装与配置gerrit\"></a>二. 安装与配置gerrit</h3><ol>\n<li>配置gerrit<br>默认安装：java -jar gerrit-2.15.1.war init -d /usr/local/review(此目录最好放在空间比较大的目录)</li>\n</ol>\n<blockquote>\n<p>配置的时候 该选择Y的时候要选择Y</p>\n</blockquote>\n<p>Install Verified label         [y/N]? N    //如果选择默认的话 会出现没有submit按钮<br>Install plugin download-commands version v2.13.4 [y/N]? y  //如果不安装 会出现创建项目没有clone地址</p>\n<p>更新配置文件：vim /usr/local/review/etc/gerrit.config</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[gerrit]</span><br><span class=\"line\">        basePath = git</span><br><span class=\"line\">        serverId = 90b8d687-f735-4a2c-b117-0518fe571670</span><br><span class=\"line\">        canonicalWebUrl = http://192.168.2.238:8080/</span><br><span class=\"line\">[database]</span><br><span class=\"line\">        type = h2</span><br><span class=\"line\">        database = /usr/local/review/db/ReviewDB</span><br><span class=\"line\">[index]</span><br><span class=\"line\">        type = LUCENE</span><br><span class=\"line\">[auth]</span><br><span class=\"line\">        type = HTTP</span><br><span class=\"line\">[receive]</span><br><span class=\"line\">        enableSignedPush = true</span><br><span class=\"line\">[sendemail]</span><br><span class=\"line\">        enable = true</span><br><span class=\"line\">        smtpServer = smtp.exmail.qq.com</span><br><span class=\"line\">        smtpServerPort = 465  </span><br><span class=\"line\">        smtpEncryption = ssl</span><br><span class=\"line\">        smtpUser = *@*.com</span><br><span class=\"line\">        smtpPass = ***</span><br><span class=\"line\">        sslVerify = false</span><br><span class=\"line\">        from = Code Review &lt;*@*.comm&gt;</span><br><span class=\"line\">[container]</span><br><span class=\"line\">        user = root</span><br><span class=\"line\">        javaHome = /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.171-3.b10.el6_9.x86_64/jre</span><br><span class=\"line\">[sshd]</span><br><span class=\"line\">        listenAddress = *:29418</span><br><span class=\"line\">[httpd]</span><br><span class=\"line\">        listenUrl = http://192.168.2.238:8080/</span><br><span class=\"line\">[cache]</span><br><span class=\"line\">        directory = cache</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li><p>配置nginx反向代理<br>配置：vim gerrit.conf</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">         listen 80;</span><br><span class=\"line\">         server_name 192.168.2.238;</span><br><span class=\"line\">         auth_basic &quot;Welcomme to Gerrit Code Review Site!&quot;;</span><br><span class=\"line\">         auth_basic_user_file /opt/.passwd;</span><br><span class=\"line\">         location / &#123;</span><br><span class=\"line\">            proxy_pass  http://192.168.2.238:8080;</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">       &#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>配置gerrit账户密码 创建认证用户(通过httpd-tools工具)<br>touch /opt/.passwd<br>htpasswd -c -b /opt/.passwd admin 123456(管理员)</p>\n</li>\n<li><p>启动gerrit&amp;启动nginx<br>sudo /usr/local/review/bin/gerrit.sh restart<br>service nginx start</p>\n</li>\n<li><p>访问gerrit 管理界面 <a href=\"http://xxx.xxxxx.com/\" target=\"_blank\" rel=\"noopener\">http://xxx.xxxxx.com/</a><br>第一次访问，需要输入第3步设置的admin及密码，该账户将作为gerrit管理员账户。</p>\n</li>\n</ol>\n<h3 id=\"三、如何使用gerrit\"><a href=\"#三、如何使用gerrit\" class=\"headerlink\" title=\"三、如何使用gerrit\"></a>三、如何使用gerrit</h3><p>前提：需要git使用端 / gerrit服务端配合使用。</p>\n<ol>\n<li>添加项目(gerrit 服务端)</li>\n<li>1 使用gerrit添加新项目：（适用于开启新项目并使用gerrit）<br>使用gerrit管理界面创建项目</li>\n</ol>\n<p>1.2使用gerrit添加已有项目：（适用于已有项目下移植到gerrit中）<br>ssh -p 3389 gerrit1@公网IP gerrit create-project –name exist-project #建议采用管理界面添加<br>或者使用gerrit管理界面<br>然后将已有项目与gerrit上建立的exist-project关联，即将已有代码库代码push到gerrit中进行管理。<br>cd /usr/local/review/git/exist-project<br>git push ssh://gerrit1@公网IP:3389/exist-project <em>:</em></p>\n<ol start=\"2\">\n<li>生成sshkey(git使用端)<br>在开发账户中生成sshkey，用作与gerrit服务器连接。<br>ssh-keygen -t rsa #生成sshkey</li>\n</ol>\n<p>cat ~/.ssh/id_rsa.pub #查看sshkey</p>\n<ol start=\"3\">\n<li><p>添加sshkey到gerrit服务器(gerrit 服务端)<br>此步骤与git流程类似，即将/root/.ssh/id_rsa.pub内容添加到gerri和gitlab(后面gerrit和gitlab直接同步)</p>\n</li>\n<li><p>拉取代码＆配置git hooks(git client端)<br>验证sshkey是否配置成功：ssh -p 29418 <a href=\"mailto:admin@192.168.199.222\" target=\"_blank\" rel=\"noopener\">admin@192.168.199.222</a></p>\n</li>\n</ol>\n<p>拉取代码url：选择 clone with commit-msg hook  //会直接配置Change-ID gerrit流程必备</p>\n<p>修改代码并提交，推送时与原有git流程不一致，采用 git push origin HEAD:refs/for/master</p>\n<h3 id=\"四-使用gerrit-website完成code-review\"><a href=\"#四-使用gerrit-website完成code-review\" class=\"headerlink\" title=\"四.使用gerrit website完成code review\"></a>四.使用gerrit website完成code review</h3><p>当完成push后，可在gerrit管理界面看到当前提交code review的change。<br>查看需要code review的提交：<br>查看某次提交的详细信息（审核者+2可通过本次提交，提交者可通过Abandon本次提交）：<br>如果审核者+2通过后，可提交该次commit.</p>\n<h5 id=\"配置gerrit和gitlab同步\"><a href=\"#配置gerrit和gitlab同步\" class=\"headerlink\" title=\"配置gerrit和gitlab同步\"></a>配置gerrit和gitlab同步</h5><p>gerrit和gitlab同步需要配置两个地方 (前提示已将sshkey 添加至gerrit和gitlab)</p>\n<p>配置 /root/.ssh/config</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Host 192.168.2.244</span><br><span class=\"line\">    User root</span><br><span class=\"line\">    IdentityFile ~/.ssh/id_rsa</span><br><span class=\"line\">    StrictHostKeyChecking no</span><br><span class=\"line\">    UserKnownHostsFile /dev/null</span><br><span class=\"line\">    PreferredAuthentications publickey</span><br></pre></td></tr></table></figure>\n\n<p>配置replation插件<br>/usr/local/review/etc/replication.config   //以实际gerrit安装位置为准</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[remote &quot;192.168.2.244&quot;]</span><br><span class=\"line\">         url = git@192.168.2.244:root/$&#123;name&#125;.git</span><br><span class=\"line\">         push = +refs/heads/*:refs/heads/*</span><br><span class=\"line\">         push = +refs/tags/*:refs/tags/*</span><br><span class=\"line\">         push = +refs/changes/*:refs/changes/*</span><br><span class=\"line\">         timtout = 30</span><br><span class=\"line\">         threads = 3</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"五-gerrit注意事项\"><a href=\"#五-gerrit注意事项\" class=\"headerlink\" title=\"五.gerrit注意事项\"></a>五.gerrit注意事项</h3><ul>\n<li>需要为每个使用者分配gerrit账号，不要都使用admin账号，因为admin账号可直接push master</li>\n<li>push代码时需要使用<br>git push origin HEAD:refs/for/master(branch),gerrit默认关闭非admin账号的push direct权限</li>\n<li>push代码时需要commit email与gerrit logoutaccount email一致，否则无法push成功，可选择关闭email notify，并开启forge user权限，或者通过修改gerrit数据库account email信息</li>\n<li>git配置的email一定要和gerrit里注册的email一致，否者push会出错</li>\n<li>gerrit数据库与gitlab同步，需要安装replication插件，并开启该功能</li>\n</ul>\n","site":{"data":{}},"excerpt":"<h3 id=\"一、环境准备\"><a href=\"#一、环境准备\" class=\"headerlink\" title=\"一、环境准备\"></a>一、环境准备</h3><ol>\n<li><p>OS:centos6.8<br>gerrit依赖 (java&amp;git)<br>yum -y install java-1.8.0<br>安装git 2.14.1 (低版本git同步gitlab时会出问题)<br>yum install -y  <a href=\"http://opensource.wandisco.com/centos/6/git/x86_64/wandisco-git-release-6-1.noarch.rpm\" target=\"_blank\" rel=\"noopener\">http://opensource.wandisco.com/centos/6/git/x86_64/wandisco-git-release-6-1.noarch.rpm</a><br>yum install -y git<br>yum -y install epel-release &amp;&amp; yum -y install nginx httpd-tools</p>\n</li>\n<li><p>gerrit环境<br>下载：Gerrit 2.15.1  wget <a href=\"https://www.gerritcodereview.com/download/gerrit-2.15.1.war\" target=\"_blank\" rel=\"noopener\">https://www.gerritcodereview.com/download/gerrit-2.15.1.war</a></p>","more":"</li>\n<li><p>gerrit管理帐号(可选，使用独立账号配置gerrit)<br>gerrit依赖，用来管理gerrit。<br>sudo adduser gerrit<br>sudo passwd gerrit<br>并将gerrit加入sudo权限<br>sudo vi /etc/sudoers<br>gerrit  ALL=(ALL:ALL) ALL<br>备注：这里我直接使用root用户安装</p>\n</li>\n</ol>\n<h3 id=\"二-安装与配置gerrit\"><a href=\"#二-安装与配置gerrit\" class=\"headerlink\" title=\"二. 安装与配置gerrit\"></a>二. 安装与配置gerrit</h3><ol>\n<li>配置gerrit<br>默认安装：java -jar gerrit-2.15.1.war init -d /usr/local/review(此目录最好放在空间比较大的目录)</li>\n</ol>\n<blockquote>\n<p>配置的时候 该选择Y的时候要选择Y</p>\n</blockquote>\n<p>Install Verified label         [y/N]? N    //如果选择默认的话 会出现没有submit按钮<br>Install plugin download-commands version v2.13.4 [y/N]? y  //如果不安装 会出现创建项目没有clone地址</p>\n<p>更新配置文件：vim /usr/local/review/etc/gerrit.config</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[gerrit]</span><br><span class=\"line\">        basePath = git</span><br><span class=\"line\">        serverId = 90b8d687-f735-4a2c-b117-0518fe571670</span><br><span class=\"line\">        canonicalWebUrl = http://192.168.2.238:8080/</span><br><span class=\"line\">[database]</span><br><span class=\"line\">        type = h2</span><br><span class=\"line\">        database = /usr/local/review/db/ReviewDB</span><br><span class=\"line\">[index]</span><br><span class=\"line\">        type = LUCENE</span><br><span class=\"line\">[auth]</span><br><span class=\"line\">        type = HTTP</span><br><span class=\"line\">[receive]</span><br><span class=\"line\">        enableSignedPush = true</span><br><span class=\"line\">[sendemail]</span><br><span class=\"line\">        enable = true</span><br><span class=\"line\">        smtpServer = smtp.exmail.qq.com</span><br><span class=\"line\">        smtpServerPort = 465  </span><br><span class=\"line\">        smtpEncryption = ssl</span><br><span class=\"line\">        smtpUser = *@*.com</span><br><span class=\"line\">        smtpPass = ***</span><br><span class=\"line\">        sslVerify = false</span><br><span class=\"line\">        from = Code Review &lt;*@*.comm&gt;</span><br><span class=\"line\">[container]</span><br><span class=\"line\">        user = root</span><br><span class=\"line\">        javaHome = /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.171-3.b10.el6_9.x86_64/jre</span><br><span class=\"line\">[sshd]</span><br><span class=\"line\">        listenAddress = *:29418</span><br><span class=\"line\">[httpd]</span><br><span class=\"line\">        listenUrl = http://192.168.2.238:8080/</span><br><span class=\"line\">[cache]</span><br><span class=\"line\">        directory = cache</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li><p>配置nginx反向代理<br>配置：vim gerrit.conf</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">         listen 80;</span><br><span class=\"line\">         server_name 192.168.2.238;</span><br><span class=\"line\">         auth_basic &quot;Welcomme to Gerrit Code Review Site!&quot;;</span><br><span class=\"line\">         auth_basic_user_file /opt/.passwd;</span><br><span class=\"line\">         location / &#123;</span><br><span class=\"line\">            proxy_pass  http://192.168.2.238:8080;</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">       &#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>配置gerrit账户密码 创建认证用户(通过httpd-tools工具)<br>touch /opt/.passwd<br>htpasswd -c -b /opt/.passwd admin 123456(管理员)</p>\n</li>\n<li><p>启动gerrit&amp;启动nginx<br>sudo /usr/local/review/bin/gerrit.sh restart<br>service nginx start</p>\n</li>\n<li><p>访问gerrit 管理界面 <a href=\"http://xxx.xxxxx.com/\" target=\"_blank\" rel=\"noopener\">http://xxx.xxxxx.com/</a><br>第一次访问，需要输入第3步设置的admin及密码，该账户将作为gerrit管理员账户。</p>\n</li>\n</ol>\n<h3 id=\"三、如何使用gerrit\"><a href=\"#三、如何使用gerrit\" class=\"headerlink\" title=\"三、如何使用gerrit\"></a>三、如何使用gerrit</h3><p>前提：需要git使用端 / gerrit服务端配合使用。</p>\n<ol>\n<li>添加项目(gerrit 服务端)</li>\n<li>1 使用gerrit添加新项目：（适用于开启新项目并使用gerrit）<br>使用gerrit管理界面创建项目</li>\n</ol>\n<p>1.2使用gerrit添加已有项目：（适用于已有项目下移植到gerrit中）<br>ssh -p 3389 gerrit1@公网IP gerrit create-project –name exist-project #建议采用管理界面添加<br>或者使用gerrit管理界面<br>然后将已有项目与gerrit上建立的exist-project关联，即将已有代码库代码push到gerrit中进行管理。<br>cd /usr/local/review/git/exist-project<br>git push ssh://gerrit1@公网IP:3389/exist-project <em>:</em></p>\n<ol start=\"2\">\n<li>生成sshkey(git使用端)<br>在开发账户中生成sshkey，用作与gerrit服务器连接。<br>ssh-keygen -t rsa #生成sshkey</li>\n</ol>\n<p>cat ~/.ssh/id_rsa.pub #查看sshkey</p>\n<ol start=\"3\">\n<li><p>添加sshkey到gerrit服务器(gerrit 服务端)<br>此步骤与git流程类似，即将/root/.ssh/id_rsa.pub内容添加到gerri和gitlab(后面gerrit和gitlab直接同步)</p>\n</li>\n<li><p>拉取代码＆配置git hooks(git client端)<br>验证sshkey是否配置成功：ssh -p 29418 <a href=\"mailto:admin@192.168.199.222\" target=\"_blank\" rel=\"noopener\">admin@192.168.199.222</a></p>\n</li>\n</ol>\n<p>拉取代码url：选择 clone with commit-msg hook  //会直接配置Change-ID gerrit流程必备</p>\n<p>修改代码并提交，推送时与原有git流程不一致，采用 git push origin HEAD:refs/for/master</p>\n<h3 id=\"四-使用gerrit-website完成code-review\"><a href=\"#四-使用gerrit-website完成code-review\" class=\"headerlink\" title=\"四.使用gerrit website完成code review\"></a>四.使用gerrit website完成code review</h3><p>当完成push后，可在gerrit管理界面看到当前提交code review的change。<br>查看需要code review的提交：<br>查看某次提交的详细信息（审核者+2可通过本次提交，提交者可通过Abandon本次提交）：<br>如果审核者+2通过后，可提交该次commit.</p>\n<h5 id=\"配置gerrit和gitlab同步\"><a href=\"#配置gerrit和gitlab同步\" class=\"headerlink\" title=\"配置gerrit和gitlab同步\"></a>配置gerrit和gitlab同步</h5><p>gerrit和gitlab同步需要配置两个地方 (前提示已将sshkey 添加至gerrit和gitlab)</p>\n<p>配置 /root/.ssh/config</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Host 192.168.2.244</span><br><span class=\"line\">    User root</span><br><span class=\"line\">    IdentityFile ~/.ssh/id_rsa</span><br><span class=\"line\">    StrictHostKeyChecking no</span><br><span class=\"line\">    UserKnownHostsFile /dev/null</span><br><span class=\"line\">    PreferredAuthentications publickey</span><br></pre></td></tr></table></figure>\n\n<p>配置replation插件<br>/usr/local/review/etc/replication.config   //以实际gerrit安装位置为准</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[remote &quot;192.168.2.244&quot;]</span><br><span class=\"line\">         url = git@192.168.2.244:root/$&#123;name&#125;.git</span><br><span class=\"line\">         push = +refs/heads/*:refs/heads/*</span><br><span class=\"line\">         push = +refs/tags/*:refs/tags/*</span><br><span class=\"line\">         push = +refs/changes/*:refs/changes/*</span><br><span class=\"line\">         timtout = 30</span><br><span class=\"line\">         threads = 3</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"五-gerrit注意事项\"><a href=\"#五-gerrit注意事项\" class=\"headerlink\" title=\"五.gerrit注意事项\"></a>五.gerrit注意事项</h3><ul>\n<li>需要为每个使用者分配gerrit账号，不要都使用admin账号，因为admin账号可直接push master</li>\n<li>push代码时需要使用<br>git push origin HEAD:refs/for/master(branch),gerrit默认关闭非admin账号的push direct权限</li>\n<li>push代码时需要commit email与gerrit logoutaccount email一致，否则无法push成功，可选择关闭email notify，并开启forge user权限，或者通过修改gerrit数据库account email信息</li>\n<li>git配置的email一定要和gerrit里注册的email一致，否者push会出错</li>\n<li>gerrit数据库与gitlab同步，需要安装replication插件，并开启该功能</li>\n</ul>"},{"title":"Centos更换yum源","date":"2018-02-01T16:00:00.000Z","_content":"\n#### 第一步：备份你的原镜像文件，以免出错后可以恢复。\n\n````\nmv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup\n````\n\n#### 第二步：下载新的CentOS-Base.repo 到/etc/yum.repos.d/\n````\nCentOS 6\nwget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-6.repo\nCentOS 7\nwget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo\n\n````\n<!-- more --> \n\n \n\n#### 第三步：运行yum makecache生成缓存\n````\nyum clean all\nyum makecache\n````\n","source":"_posts/更换yum源.md","raw":"---\ntitle: Centos更换yum源\ndate: 2018-02-02\ntags: Linux\n---\n\n#### 第一步：备份你的原镜像文件，以免出错后可以恢复。\n\n````\nmv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup\n````\n\n#### 第二步：下载新的CentOS-Base.repo 到/etc/yum.repos.d/\n````\nCentOS 6\nwget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-6.repo\nCentOS 7\nwget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo\n\n````\n<!-- more --> \n\n \n\n#### 第三步：运行yum makecache生成缓存\n````\nyum clean all\nyum makecache\n````\n","slug":"更换yum源","published":1,"updated":"2019-09-13T01:45:02.284Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0hpb4ax000aul6vx5kxx8li","content":"<h4 id=\"第一步：备份你的原镜像文件，以免出错后可以恢复。\"><a href=\"#第一步：备份你的原镜像文件，以免出错后可以恢复。\" class=\"headerlink\" title=\"第一步：备份你的原镜像文件，以免出错后可以恢复。\"></a>第一步：备份你的原镜像文件，以免出错后可以恢复。</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"第二步：下载新的CentOS-Base-repo-到-etc-yum-repos-d\"><a href=\"#第二步：下载新的CentOS-Base-repo-到-etc-yum-repos-d\" class=\"headerlink\" title=\"第二步：下载新的CentOS-Base.repo 到/etc/yum.repos.d/\"></a>第二步：下载新的CentOS-Base.repo 到/etc/yum.repos.d/</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CentOS 6</span><br><span class=\"line\">wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-6.repo</span><br><span class=\"line\">CentOS 7</span><br><span class=\"line\">wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a> \n\n\n\n<h4 id=\"第三步：运行yum-makecache生成缓存\"><a href=\"#第三步：运行yum-makecache生成缓存\" class=\"headerlink\" title=\"第三步：运行yum makecache生成缓存\"></a>第三步：运行yum makecache生成缓存</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum clean all</span><br><span class=\"line\">yum makecache</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<h4 id=\"第一步：备份你的原镜像文件，以免出错后可以恢复。\"><a href=\"#第一步：备份你的原镜像文件，以免出错后可以恢复。\" class=\"headerlink\" title=\"第一步：备份你的原镜像文件，以免出错后可以恢复。\"></a>第一步：备份你的原镜像文件，以免出错后可以恢复。</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"第二步：下载新的CentOS-Base-repo-到-etc-yum-repos-d\"><a href=\"#第二步：下载新的CentOS-Base-repo-到-etc-yum-repos-d\" class=\"headerlink\" title=\"第二步：下载新的CentOS-Base.repo 到/etc/yum.repos.d/\"></a>第二步：下载新的CentOS-Base.repo 到/etc/yum.repos.d/</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CentOS 6</span><br><span class=\"line\">wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-6.repo</span><br><span class=\"line\">CentOS 7</span><br><span class=\"line\">wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br></pre></td></tr></table></figure>","more":"<h4 id=\"第三步：运行yum-makecache生成缓存\"><a href=\"#第三步：运行yum-makecache生成缓存\" class=\"headerlink\" title=\"第三步：运行yum makecache生成缓存\"></a>第三步：运行yum makecache生成缓存</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum clean all</span><br><span class=\"line\">yum makecache</span><br></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"ck0hpb4af0000ul6ve5b1odl3","tag_id":"ck0hpb4aq0004ul6v2rq42l59","_id":"ck0hpb4ax0009ul6vglkni5co"},{"post_id":"ck0hpb4am0002ul6vf79tpaca","tag_id":"ck0hpb4aw0008ul6vh5gru9i3","_id":"ck0hpb4az000cul6vu2izp79i"},{"post_id":"ck0hpb4as0005ul6v8q2zqc95","tag_id":"ck0hpb4az000bul6v8x1rzbts","_id":"ck0hpb4b0000eul6vdhqzn3ab"},{"post_id":"ck0hpb4au0006ul6v3rtqget6","tag_id":"ck0hpb4az000dul6vegce5s1j","_id":"ck0hpb4b0000gul6vb2wiacs3"},{"post_id":"ck0hpb4av0007ul6v6o2v7cuu","tag_id":"ck0hpb4b0000ful6vkm086996","_id":"ck0hpb4b2000kul6vv1pzzy5u"},{"post_id":"ck0hpb4av0007ul6v6o2v7cuu","tag_id":"ck0hpb4b0000hul6v4ohb5omd","_id":"ck0hpb4b3000lul6vjksw5s7c"},{"post_id":"ck0hpb4av0007ul6v6o2v7cuu","tag_id":"ck0hpb4b1000iul6vndgyvlwr","_id":"ck0hpb4b3000mul6vrtgjvtcp"},{"post_id":"ck0hpb4ax000aul6vx5kxx8li","tag_id":"ck0hpb4az000dul6vegce5s1j","_id":"ck0hpb4b3000nul6v57qs8lub"}],"Tag":[{"name":"Nginx","_id":"ck0hpb4aq0004ul6v2rq42l59"},{"name":"Prometheus","_id":"ck0hpb4aw0008ul6vh5gru9i3"},{"name":"IDE","_id":"ck0hpb4az000bul6v8x1rzbts"},{"name":"Linux","_id":"ck0hpb4az000dul6vegce5s1j"},{"name":"gitlab","_id":"ck0hpb4b0000ful6vkm086996"},{"name":"gerrit","_id":"ck0hpb4b0000hul6v4ohb5omd"},{"name":"CodeReview","_id":"ck0hpb4b1000iul6vndgyvlwr"}]}}